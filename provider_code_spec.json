{
	"provider": {
		"name": "lago"
	},
	"resources": [
		{
			"name": "add_ons",
			"schema": {
				"attributes": [
					{
						"name": "add_on",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The cost of the add-on in cents, excluding any applicable taxes, that is billed to a customer. By creating a one-off invoice, you will be able to override this value."
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "code",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Unique code used to identify the add-on."
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The description of the add-on."
									}
								},
								{
									"name": "invoice_display_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The name of the add-on."
									}
								},
								{
									"name": "tax_codes",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "List of unique code used to identify the taxes."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the add-on was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the add-on was initially created."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the add-on, created by Lago."
									}
								},
								{
									"name": "taxes",
									"list_nested": {
										"computed_optional_required": "computed",
										"nested_object": {
											"attributes": [
												{
													"name": "applied_to_organization",
													"bool": {
														"computed_optional_required": "computed",
														"description": "Set to `true` if the tax is used as one of the organization's default"
													}
												},
												{
													"name": "code",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique code used to identify the tax associated with the API request."
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "Creation date of the tax."
													}
												},
												{
													"name": "description",
													"string": {
														"computed_optional_required": "computed",
														"description": "Internal description of the taxe"
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the tax, created by Lago."
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed",
														"description": "Name of the tax."
													}
												},
												{
													"name": "rate",
													"number": {
														"computed_optional_required": "computed",
														"description": "The percentage rate of the tax"
													}
												}
											]
										},
										"description": "All taxes applied to the add-on."
									}
								}
							]
						}
					},
					{
						"name": "code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique code used to identify the add-on."
						}
					}
				]
			}
		},
		{
			"name": "applied_coupons",
			"schema": {
				"attributes": [
					{
						"name": "applied_coupon",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The amount of the coupon in cents. This field is required only for coupon with `fixed_amount` type."
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "coupon_code",
									"string": {
										"computed_optional_required": "required",
										"description": "Unique code used to identify the coupon."
									}
								},
								{
									"name": "external_customer_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The customer external unique identifier (provided by your own application)"
									}
								},
								{
									"name": "frequency",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The type of frequency for the coupon. It can have three possible values: `once`, `recurring` or `forever`.\n\n- If set to `once`, the coupon is applicable only for a single use.\n- If set to `recurring`, the coupon can be used multiple times for recurring billing periods.\n- If set to `forever`, the coupon has unlimited usage and can be applied indefinitely.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"once\",\n\"recurring\",\n\"forever\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "frequency_duration",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies the number of billing periods to which the coupon applies. This field is required only for coupons with a `recurring` frequency type"
									}
								},
								{
									"name": "percentage_rate",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The percentage rate of the coupon. This field is required only for coupons with a `percentage` coupon type.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "amount_cents_remaining",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The remaining amount in cents for a `fixed_amount` coupon with a frequency set to `once`. This field indicates the remaining balance or value that can still be utilized from the coupon."
									}
								},
								{
									"name": "coupon_name",
									"string": {
										"computed_optional_required": "computed",
										"description": "The name of the coupon."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the coupon was assigned to a customer. It is expressed in UTC format according to the ISO 8601 datetime standard."
									}
								},
								{
									"name": "expiration_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time after which the coupon will stop applying to customer's invoices. Once the expiration date is reached, the coupon will no longer be applicable, and any further invoices generated for the customer will not include the coupon discount."
									}
								},
								{
									"name": "frequency_duration_remaining",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The remaining number of billing periods to which the coupon is applicable. This field determines the remaining usage or availability of the coupon based on the remaining billing periods."
									}
								},
								{
									"name": "lago_coupon_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the coupon, created by Lago."
									}
								},
								{
									"name": "lago_customer_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the customer, created by Lago."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the applied coupon, created by Lago."
									}
								},
								{
									"name": "status",
									"string": {
										"computed_optional_required": "computed",
										"description": "The status of the coupon. Can be either `active` or `terminated`."
									}
								},
								{
									"name": "terminated_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "This field indicates the specific moment when the coupon amount is fully utilized or when the coupon is removed from the customer's coupon list. It is expressed in UTC format according to the ISO 8601 datetime standard."
									}
								}
							]
						}
					},
					{
						"name": "page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Page number."
						}
					},
					{
						"name": "per_page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Number of records per page."
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The status of the coupon. Can be either `active` or `terminated`.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"active\",\n\"terminated\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "external_customer_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The customer external unique identifier (provided by your own application)"
						}
					}
				]
			}
		},
		{
			"name": "billable_metrics",
			"schema": {
				"attributes": [
					{
						"name": "billable_metric",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "aggregation_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Aggregation method used to compute usage for this billable metric.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"count_agg\",\n\"sum_agg\",\n\"max_agg\",\n\"unique_count_agg\",\n\"weighted_sum_agg\",\n\"latest_agg\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "code",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Unique code used to identify the billable metric associated with the API request. This code associates each event with the correct metric."
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Internal description of the billable metric."
									}
								},
								{
									"name": "expression",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Expression used to calculate the event units. The expression is evalutated for each event and the result is then used to calculate the total aggregated units.\nAccepted function are `ceil`, `concat` and `round` as well as `+`, `-`, `\\` and `*` operations.\nRound is accepting an optional second parameter to specify the number of decimal.\n"
									}
								},
								{
									"name": "field_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Property of the billable metric used for aggregating usage data. This field is not required for `count_agg`."
									}
								},
								{
									"name": "filters",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "key",
													"string": {
														"computed_optional_required": "required",
														"description": "Filter key to add to the event properties payload"
													}
												},
												{
													"name": "values",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														},
														"description": "List of possible filter values"
													}
												}
											]
										}
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Name of the billable metric."
									}
								},
								{
									"name": "recurring",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Defines if the billable metric is persisted billing period over billing period.\n\n- If set to `true`: the accumulated number of units calculated from the previous billing period is persisted to the next billing period.\n- If set to `false`: the accumulated number of units is reset to 0 at the end of the billing period.\n- If not defined in the request, default value is `false`."
									}
								},
								{
									"name": "rounding_function",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Refers to the numeric value or mathematical expression that will be rounded based on the calculated number of billing units. Possible values are `round`, `ceil` and `floor`.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"ceil\",\n\"floor\",\n\"round\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "rounding_precision",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies the number of decimal places to which the `rounding_function` will be rounded. It can be a positive or negative value."
									}
								},
								{
									"name": "weighted_interval",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Parameter exclusively utilized in conjunction with the `weighted_sum` aggregation type. It serves to adjust the aggregation result by assigning weights and proration to the result based on time intervals. When this field is not provided, the default time interval is assumed to be in `seconds`.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"seconds\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "Creation date of the billable metric."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the billable metric created by Lago."
									}
								}
							]
						}
					},
					{
						"name": "code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Code of the existing billable metric."
						}
					}
				]
			}
		},
		{
			"name": "coupons",
			"schema": {
				"attributes": [
					{
						"name": "coupon",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The amount of the coupon in cents. This field is required only for coupon with `fixed_amount` type."
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "applies_to",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "billable_metric_codes",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "An array of billable metric codes to which the coupon is applicable. By specifying the billable metric codes in this field, you can restrict the coupon's usage to specific metrics only."
												}
											},
											{
												"name": "plan_codes",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "An array of plan codes to which the coupon is applicable. By specifying the plan codes in this field, you can restrict the coupon's usage to specific plans only."
												}
											}
										],
										"description": "Set coupon limitations to plans or specific metrics."
									}
								},
								{
									"name": "code",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Unique code used to identify the coupon."
									}
								},
								{
									"name": "coupon_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The type of the coupon. It can have two possible values: `fixed_amount` or `percentage`.\n\n- If set to `fixed_amount`, the coupon represents a fixed amount discount.\n- If set to `percentage`, the coupon represents a percentage-based discount.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"fixed_amount\",\n\"percentage\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Description of the coupon."
									}
								},
								{
									"name": "expiration",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies the type of expiration for the coupon. It can have two possible values: `time_limit` or `no_expiration`.\n\n- If set to `time_limit`, the coupon has an expiration based on a specified time limit.\n- If set to `no_expiration`, the coupon does not have an expiration date and remains valid indefinitely.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"no_expiration\",\n\"time_limit\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "expiration_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The expiration date and time of the coupon. This field is required only for coupons with `expiration` set to `time_limit`. The expiration date and time should be specified in UTC format according to the ISO 8601 datetime standard. It indicates the exact moment when the coupon will expire and is no longer valid."
									}
								},
								{
									"name": "frequency",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The type of frequency for the coupon. It can have three possible values: `once`, `recurring` or `forever`.\n\n- If set to `once`, the coupon is applicable only for a single use.\n- If set to `recurring`, the coupon can be used multiple times for recurring billing periods.\n- If set to `forever`, the coupon has unlimited usage and can be applied indefinitely.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"once\",\n\"recurring\",\n\"forever\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "frequency_duration",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies the number of billing periods to which the coupon applies. This field is required only for coupons with a `recurring` frequency type"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The name of the coupon."
									}
								},
								{
									"name": "percentage_rate",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The percentage rate of the coupon. This field is required only for coupons with a `percentage` coupon type.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "reusable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Indicates whether the coupon can be reused or not. If set to `true`, the coupon is reusable, meaning it can be applied multiple times to the same customer. If set to `false`, the coupon can only be used once and is not reusable. If not specified, this field is set to `true` by default."
									}
								},
								{
									"name": "billable_metric_codes",
									"list": {
										"computed_optional_required": "computed",
										"element_type": {
											"string": {}
										},
										"description": "An array of billable metric codes to which the coupon is applicable. By specifying the billable metric codes in this field, you can restrict the coupon's usage to specific metrics only."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the coupon was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the coupon was initially created."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the coupon, created by Lago."
									}
								},
								{
									"name": "limited_billable_metrics",
									"bool": {
										"computed_optional_required": "computed",
										"description": "The coupon is limited to specific billable metrics. The possible values can be `true` or `false`."
									}
								},
								{
									"name": "limited_plans",
									"bool": {
										"computed_optional_required": "computed",
										"description": "The coupon is limited to specific plans. The possible values can be `true` or `false`."
									}
								},
								{
									"name": "plan_codes",
									"list": {
										"computed_optional_required": "computed",
										"element_type": {
											"string": {}
										},
										"description": "An array of plan codes to which the coupon is applicable. By specifying the plan codes in this field, you can restrict the coupon's usage to specific plans only."
									}
								},
								{
									"name": "terminated_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "This field indicates if the coupon has been terminated and is no longer usable. If it's not null, it won't be removed for existing customers using it, but it prevents the coupon from being applied in the future."
									}
								}
							]
						}
					},
					{
						"name": "code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique code used to identify the coupon."
						}
					}
				]
			}
		},
		{
			"name": "credit_notes",
			"schema": {
				"attributes": [
					{
						"name": "credit_note",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "credit_amount_cents",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The total amount to be credited on the customer balance."
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The description of the credit note."
									}
								},
								{
									"name": "invoice_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The invoice unique identifier, created by Lago."
									}
								},
								{
									"name": "items",
									"list_nested": {
										"computed_optional_required": "required",
										"nested_object": {
											"attributes": [
												{
													"name": "amount_cents",
													"int64": {
														"computed_optional_required": "required",
														"description": "The amount of the credit note item, expressed in cents."
													}
												},
												{
													"name": "fee_id",
													"string": {
														"computed_optional_required": "required",
														"description": "The fee unique identifier, created by Lago."
													}
												},
												{
													"name": "amount_currency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "fee",
													"single_nested": {
														"computed_optional_required": "computed",
														"attributes": [
															{
																"name": "amount_cents",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "The cost of this specific fee, excluding any applicable taxes."
																}
															},
															{
																"name": "amount_currency",
																"string": {
																	"computed_optional_required": "computed"
																}
															},
															{
																"name": "amount_details",
																"single_nested": {
																	"computed_optional_required": "computed",
																	"attributes": [
																		{
																			"name": "fixed_fee_total_amount",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Total amount to charge for received paid_events for the Percentage charge model."
																			}
																		},
																		{
																			"name": "fixed_fee_unit_amount",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Fixed fee unit price per received paid_event for the Percentage charge model."
																			}
																		},
																		{
																			"name": "free_events",
																			"int64": {
																				"computed_optional_required": "computed",
																				"description": "Total number of free events allowed for the Percentage charge model."
																			}
																		},
																		{
																			"name": "free_units",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The quantity of units that are provided free of charge for each billing period in a `package` charge model."
																			}
																		},
																		{
																			"name": "graduated_percentage_ranges",
																			"list_nested": {
																				"computed_optional_required": "computed",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "flat_unit_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Flat unit amount within a specified tier."
																							}
																						},
																						{
																							"name": "from_value",
																							"int64": {
																								"computed_optional_required": "computed",
																								"description": "Lower value of a tier. It is either 0 or the previous range's `to_value + 1`."
																							}
																						},
																						{
																							"name": "per_unit_total_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total amount of received units to be charged within a specified tier."
																							}
																						},
																						{
																							"name": "rate",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Percentage rate applied within a specified tier."
																							}
																						},
																						{
																							"name": "to_value",
																							"int64": {
																								"computed_optional_required": "computed",
																								"description": "Highest value of a tier.\n- This value is higher than the from_value of the same tier.\n- This value is null for the last tier."
																							}
																						},
																						{
																							"name": "total_with_flat_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total amount to be charged for a specific tier, taking into account the flat_unit_amount and the per_unit_total_amount."
																							}
																						},
																						{
																							"name": "units",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total units received in Lago."
																							}
																						}
																					]
																				},
																				"description": "Graduated percentage ranges, used for a `graduated_percentage` charge model."
																			}
																		},
																		{
																			"name": "graduated_ranges",
																			"list_nested": {
																				"computed_optional_required": "computed",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "flat_unit_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Flat unit amount within a specified tier."
																							}
																						},
																						{
																							"name": "from_value",
																							"int64": {
																								"computed_optional_required": "computed",
																								"description": "Lower value of a tier. It is either 0 or the previous range's `to_value + 1`."
																							}
																						},
																						{
																							"name": "per_unit_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Amount per unit within a specified tier."
																							}
																						},
																						{
																							"name": "per_unit_total_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total amount of received units to be charged within a specified tier."
																							}
																						},
																						{
																							"name": "to_value",
																							"int64": {
																								"computed_optional_required": "computed",
																								"description": "Highest value of a tier.\n- This value is higher than the from_value of the same tier.\n- This value is null for the last tier."
																							}
																						},
																						{
																							"name": "total_with_flat_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total amount to be charged for a specific tier, taking into account the flat_unit_amount and the per_unit_total_amount."
																							}
																						},
																						{
																							"name": "units",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total units received in Lago."
																							}
																						}
																					]
																				},
																				"description": "Graduated ranges, used for a `graduated` charge model."
																			}
																		},
																		{
																			"name": "min_max_adjustment_total_amount",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Total adjustment amount linked to minimum and maximum spending per transaction for the Percentage charge model."
																			}
																		},
																		{
																			"name": "paid_events",
																			"int64": {
																				"computed_optional_required": "computed",
																				"description": "Total number of paid events for the Percentage charge model."
																			}
																		},
																		{
																			"name": "paid_units",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The quantity of units that are not provided free of charge for each billing period in a `package` charge model."
																			}
																		},
																		{
																			"name": "per_package_size",
																			"int64": {
																				"computed_optional_required": "computed",
																				"description": "The quantity of units included, defined for Package or Percentage charge model."
																			}
																		},
																		{
																			"name": "per_package_unit_amount",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Total amount to charge for received paid_units, defined for Package or Percentage charge model."
																			}
																		},
																		{
																			"name": "per_unit_total_amount",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Total amount of received units to be charged for the Percentage charge model."
																			}
																		},
																		{
																			"name": "rate",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Percentage rate applied for the Percentage charge model."
																			}
																		},
																		{
																			"name": "units",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The total units received in Lago for the Percentage charge model."
																			}
																		},
																		{
																			"name": "volume_ranges",
																			"list_nested": {
																				"computed_optional_required": "computed",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "flat_unit_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "The unit price, excluding tax, for a specific tier of a `volume` charge model."
																							}
																						},
																						{
																							"name": "per_unit_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "The flat amount for a whole tier, excluding tax, for a `volume` charge model."
																							}
																						},
																						{
																							"name": "per_unit_total_amount",
																							"string": {
																								"computed_optional_required": "computed",
																								"description": "Total amount of received units to be charged."
																							}
																						}
																					]
																				},
																				"description": "Volume ranges, used for a `volume` charge model."
																			}
																		}
																	],
																	"description": "List of all unit amount details for calculating the fee."
																}
															},
															{
																"name": "applied_taxes",
																"list_nested": {
																	"computed_optional_required": "computed",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "amount_cents",
																				"int64": {
																					"computed_optional_required": "computed",
																					"description": "Amount of the tax"
																				}
																			},
																			{
																				"name": "amount_currency",
																				"string": {
																					"computed_optional_required": "computed"
																				}
																			},
																			{
																				"name": "created_at",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "The date and time when the applied tax was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the applied tax was initially created."
																				}
																			},
																			{
																				"name": "lago_id",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Unique identifier of the applied tax, created by Lago."
																				}
																			},
																			{
																				"name": "lago_tax_id",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Unique identifier of the tax, created by Lago."
																				}
																			},
																			{
																				"name": "tax_code",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Unique code used to identify the tax associated with the API request."
																				}
																			},
																			{
																				"name": "tax_description",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Internal description of the taxe"
																				}
																			},
																			{
																				"name": "tax_name",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Name of the tax."
																				}
																			},
																			{
																				"name": "tax_rate",
																				"number": {
																					"computed_optional_required": "computed",
																					"description": "The percentage rate of the tax"
																				}
																			}
																		]
																	},
																	"description": "List of fee applied taxes"
																}
															},
															{
																"name": "created_at",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The date and time when the fee was created. It is provided in Coordinated Universal Time (UTC) format."
																}
															},
															{
																"name": "event_transaction_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the transaction. This field is specifically displayed when the fee type is `charge` and the payment for the fee is made in advance (`pay_in_advance` is set to `true`)."
																}
															},
															{
																"name": "events_count",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "The number of events that have been sent and used to charge the customer. This field indicates the count or quantity of events that have been processed and considered in the charging process."
																}
															},
															{
																"name": "external_customer_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the customer in your application. This field is specifically displayed when the fee type is charge or subscription."
																}
															},
															{
																"name": "external_subscription_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the subscription in your application. This field is specifically displayed when the fee type is charge or subscription."
																}
															},
															{
																"name": "failed_at",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The date and time when the payment for the fee failed to process. It is provided in Coordinated Universal Time (UTC) format."
																}
															},
															{
																"name": "from_date",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The beginning date of the period that the fee covers. It is applicable only to `subscription` and `charge` fees. This field indicates the start date of the billing period or subscription period associated with the fee."
																}
															},
															{
																"name": "invoice_display_name",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
																}
															},
															{
																"name": "invoiceable",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Flag that indicates whether the fee was included on the invoice. It serves as a boolean value, where `true` represents that the fee was included on the invoice, and `false` indicates that the fee was not included on the invoice."
																}
															},
															{
																"name": "item",
																"single_nested": {
																	"computed_optional_required": "computed",
																	"attributes": [
																		{
																			"name": "code",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The code of the fee item. It can be the code of the `add-on`, the code of the `charge`, the code of the `credit` or the code of the `subscription`."
																			}
																		},
																		{
																			"name": "filter_invoice_display_name",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the actual charge filter values will be used as the default display name."
																			}
																		},
																		{
																			"name": "filters",
																			"map": {
																				"computed_optional_required": "computed",
																				"element_type": {
																					"list": {
																						"element_type": {
																							"string": {}
																						}
																					}
																				},
																				"description": "Key value list of event properties"
																			}
																		},
																		{
																			"name": "grouped_by",
																			"map": {
																				"computed_optional_required": "computed",
																				"element_type": {
																					"string": {}
																				},
																				"description": "Key value list of event properties aggregated by the charge model"
																			}
																		},
																		{
																			"name": "invoice_display_name",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
																			}
																		},
																		{
																			"name": "item_type",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The type of the fee item. Possible values are `AddOn`, `BillableMetric`, `WalletTransaction`, `Subscription` or `Commitment`."
																			}
																		},
																		{
																			"name": "lago_item_id",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "Unique identifier of the fee item, created by Lago. It can be the identifier of the `add-on`, the `charge`, the `credit`, the `subscription` or the `commitment`."
																			}
																		},
																		{
																			"name": "name",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The name of the fee item. It can be the name of the `add-on`, the `charge`, the `credit`, the `subscription` or the `commitment`."
																			}
																		},
																		{
																			"name": "type",
																			"string": {
																				"computed_optional_required": "computed",
																				"description": "The fee type. Possible values are `add-on`, `charge`, `credit`, `subscription` or `commitment`."
																			}
																		}
																	],
																	"description": "Item attached to the fee"
																}
															},
															{
																"name": "lago_charge_filter_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the charge filter that the fee belongs to"
																}
															},
															{
																"name": "lago_charge_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the charge that the fee belongs to"
																}
															},
															{
																"name": "lago_customer_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the customer, created by Lago. This field is specifically displayed when the fee type is charge or subscription."
																}
															},
															{
																"name": "lago_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee's record within the Lago system."
																}
															},
															{
																"name": "lago_invoice_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the invoice that the fee belongs to"
																}
															},
															{
																"name": "lago_subscription_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the subscription, created by Lago. This field is specifically displayed when the fee type is charge or subscription."
																}
															},
															{
																"name": "lago_true_up_fee_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the true-up fee when a minimum has been set to the charge. This identifier helps to distinguish and manage the true-up fee associated with the charge, which may be applicable when a minimum threshold or limit is set for the charge amount."
																}
															},
															{
																"name": "lago_true_up_parent_fee_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier assigned to the parent fee on which the true-up fee is assigned. This identifier establishes the relationship between the parent fee and the associated true-up fee."
																}
															},
															{
																"name": "pay_in_advance",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Flag that indicates whether the fee was paid in advance. It serves as a boolean value, where `true` represents that the fee was paid in advance (straightaway), and `false` indicates that the fee was not paid in arrears (at the end of the period)."
																}
															},
															{
																"name": "payment_status",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Indicates the payment status of the fee. It represents the current status of the payment associated with the fee. The possible values for this field are `pending`, `succeeded`, `failed` and `refunded`."
																}
															},
															{
																"name": "precise_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The cost of this specific fee, excluding any applicable taxes, with precision."
																}
															},
															{
																"name": "precise_total_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The cost of this specific fee, including any applicable taxes, with precision."
																}
															},
															{
																"name": "precise_unit_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The unit amount of the fee per unit, with precision."
																}
															},
															{
																"name": "refunded_at",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The date and time when the payment for the fee was refunded. It is provided in Coordinated Universal Time (UTC) format"
																}
															},
															{
																"name": "self_billed",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Indicates if the fee belongs to self-billed invoice. Self-billing is a process where an organization creates the invoice on behalf of the partner."
																}
															},
															{
																"name": "succeeded_at",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The date and time when the payment for the fee was successfully processed. It is provided in Coordinated Universal Time (UTC) format."
																}
															},
															{
																"name": "taxes_amount_cents",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "The cost of the tax associated with this specific fee."
																}
															},
															{
																"name": "taxes_precise_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The cost of the tax associated with this specific fee, with precision."
																}
															},
															{
																"name": "taxes_rate",
																"number": {
																	"computed_optional_required": "computed",
																	"description": "The tax rate associated with this specific fee."
																}
															},
															{
																"name": "to_date",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The ending date of the period that the fee covers. It is applicable only to `subscription` and `charge` fees. This field indicates the end date of the billing period or subscription period associated with the fee."
																}
															},
															{
																"name": "total_amount_cents",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "The cost of this specific fee, including any applicable taxes."
																}
															},
															{
																"name": "total_amount_currency",
																"string": {
																	"computed_optional_required": "computed"
																}
															},
															{
																"name": "units",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The number of units used to charge the customer. This field indicates the quantity or count of units consumed or utilized in the context of the charge. It helps in determining the basis for calculating the fee or cost associated with the usage of the service or product provided to the customer."
																}
															}
														]
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "The credit note's item unique identifier, created by Lago."
													}
												}
											]
										},
										"description": "The list of credit note's items."
									}
								},
								{
									"name": "reason",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The reason of the credit note creation.\nPossible values are `duplicated_charge`, `product_unsatisfactory`, `order_change`, `order_cancellation`, `fraudulent_charge` or `other`.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"duplicated_charge\",\n\"product_unsatisfactory\",\n\"order_change\",\n\"order_cancellation\",\n\"fraudulent_charge\",\n\"other\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "refund_amount_cents",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The total amount to be refunded to the customer."
									}
								},
								{
									"name": "applied_taxes",
									"list_nested": {
										"computed_optional_required": "computed",
										"nested_object": {
											"attributes": [
												{
													"name": "amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "Amount of the tax"
													}
												},
												{
													"name": "amount_currency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date and time when the applied tax was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the applied tax was initially created."
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the applied tax, created by Lago."
													}
												},
												{
													"name": "lago_tax_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the tax, created by Lago."
													}
												},
												{
													"name": "tax_code",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique code used to identify the tax associated with the API request."
													}
												},
												{
													"name": "tax_description",
													"string": {
														"computed_optional_required": "computed",
														"description": "Internal description of the taxe"
													}
												},
												{
													"name": "tax_name",
													"string": {
														"computed_optional_required": "computed",
														"description": "Name of the tax."
													}
												},
												{
													"name": "tax_rate",
													"number": {
														"computed_optional_required": "computed",
														"description": "The percentage rate of the tax"
													}
												}
											]
										}
									}
								},
								{
									"name": "balance_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The remaining credit note amount, expressed in cents."
									}
								},
								{
									"name": "coupons_adjustment_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The pro-rated amount of the coupons applied to the source invoice."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date when the credit note was created. It is expressed in Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "credit_status",
									"string": {
										"computed_optional_required": "computed",
										"description": "The status of the credit portion of the credit note. It indicates the current state or condition of the credit amount associated with the credit note. The possible values for this field are:\n\n- `available`: this status indicates that an amount remains available for future usage. The credit can be applied towards future transactions or invoices.\n- `consumed`: this status indicates that the credit amount has been fully consumed. The remaining amount is 0, indicating that the credit has been utilized in its entirety.\n- `voided`: this status indicates that the remaining amount of the credit cannot be used any further. The credit has been voided and is no longer available for application or redemption."
									}
								},
								{
									"name": "currency",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "file_url",
									"string": {
										"computed_optional_required": "computed",
										"description": "The PDF file of the credit note."
									}
								},
								{
									"name": "invoice_number",
									"string": {
										"computed_optional_required": "computed",
										"description": "The invoice unique number, related to the credit note."
									}
								},
								{
									"name": "issuing_date",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date of creation of the credit note. It follows the ISO 8601 date format and provides the specific date when the credit note was created."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "The credit note unique identifier, created by Lago."
									}
								},
								{
									"name": "lago_invoice_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the invoice that the credit note belongs to"
									}
								},
								{
									"name": "number",
									"string": {
										"computed_optional_required": "computed",
										"description": "The credit note unique number."
									}
								},
								{
									"name": "refund_status",
									"string": {
										"computed_optional_required": "computed",
										"description": "The status of the refund portion of the credit note. It indicates the current state or condition of the refund associated with the credit note. The possible values for this field are:\n\n- `pending`: this status indicates that the refund is pending execution. The refund request has been initiated but has not been processed or completed yet.\n- `succeeded`: this status indicates that the refund has been successfully executed. The refund amount has been processed and returned to the customer or the designated recipient.\n- `failed`: this status indicates that the refund failed to execute. The refund request encountered an error or unsuccessful processing, and the refund amount could not be returned."
									}
								},
								{
									"name": "self_billed",
									"bool": {
										"computed_optional_required": "computed",
										"description": "Indicates if the credit note belongs to self-billed invoice. Self-billing is a process where an organization creates the invoice on behalf of the partner."
									}
								},
								{
									"name": "sequential_id",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The sequential identifier of the credit note, specifically scoped on the associated invoice. It provides a unique numerical identifier for the credit note within the context of the invoice."
									}
								},
								{
									"name": "sub_total_excluding_taxes_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The subtotal of the credit note excluding any applicable taxes, expressed in cents."
									}
								},
								{
									"name": "taxes_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The tax amount of the credit note, expressed in cents."
									}
								},
								{
									"name": "taxes_rate",
									"number": {
										"computed_optional_required": "computed",
										"description": "The tax rate associated with this specific credit note."
									}
								},
								{
									"name": "total_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The total amount of the credit note, expressed in cents."
									}
								},
								{
									"name": "updated_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date when the credit note was last updated. It is expressed in Coordinated Universal Time (UTC)."
									}
								}
							]
						}
					},
					{
						"name": "lago_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The credit note unique identifier, created by Lago."
						}
					}
				]
			}
		},
		{
			"name": "customers",
			"schema": {
				"attributes": [
					{
						"name": "customer",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "account_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The type of the account. It can have one of the following values:\n- `customer`: the account is a customer, default value.\n- `partner`: the account is a partner.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"customer\",\n\"partner\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "address_line1",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The first line of the billing address"
									}
								},
								{
									"name": "address_line2",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The second line of the billing address"
									}
								},
								{
									"name": "billing_configuration",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "document_locale",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The document locale, specified in the ISO 639-1 format. This field represents the language or locale used for the documents issued by Lago"
												}
											},
											{
												"name": "invoice_grace_period",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "The grace period, expressed in days, for the invoice. This period refers to the additional time granted to the customer beyond the invoice due date to adjust usage and line items"
												}
											},
											{
												"name": "payment_provider",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The payment provider utilized to initiate payments for invoices issued by Lago.\nAccepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`.",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"stripe\",\n\"adyen\",\n\"gocardless\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "payment_provider_code",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "Unique code used to identify a payment provider connection."
												}
											},
											{
												"name": "provider_customer_id",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The customer ID within the payment provider's system. If this field is not provided, Lago has the option to create a new customer record within the payment provider's system on behalf of the customer"
												}
											},
											{
												"name": "provider_payment_methods",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "Specifies the available payment methods that can be used for this customer when `payment_provider` is set to `stripe`. The `provider_payment_methods` field is an array that allows multiple payment options to be defined. If this field is not explicitly set, the payment methods will be set to `card`. For now, possible values are `card`, `sepa_debit`, `us_bank_account`, `bacs_debit`, `boleto`, `link`, `crypto` and `customer_balance`. Note that when `link` is selected, `card` should also be provided in the array. When `customer_balance` is selected, no other payment can be selected."
												}
											},
											{
												"name": "sync",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "Set this field to `true` if you want to create the customer in the payment provider synchronously with the customer creation process in Lago. This option is applicable only when the `provider_customer_id` is `null` and the customer is automatically created in the payment provider through Lago. By default, the value is set to `false`"
												}
											},
											{
												"name": "sync_with_provider",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "Set this field to `true` if you want to create a customer record in the payment provider's system. This option is applicable only when the `provider_customer_id` is null and the `sync_with_provider` field is set to `true`. By default, the value is set to `false`"
												}
											}
										],
										"description": "Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer."
									}
								},
								{
									"name": "city",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The city of the customer's billing address"
									}
								},
								{
									"name": "country",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AD\",\n\"AE\",\n\"AF\",\n\"AG\",\n\"AI\",\n\"AL\",\n\"AM\",\n\"AO\",\n\"AQ\",\n\"AR\",\n\"AS\",\n\"AT\",\n\"AU\",\n\"AW\",\n\"AX\",\n\"AZ\",\n\"BA\",\n\"BB\",\n\"BD\",\n\"BE\",\n\"BF\",\n\"BG\",\n\"BH\",\n\"BI\",\n\"BJ\",\n\"BL\",\n\"BM\",\n\"BN\",\n\"BO\",\n\"BQ\",\n\"BR\",\n\"BS\",\n\"BT\",\n\"BV\",\n\"BW\",\n\"BY\",\n\"BZ\",\n\"CA\",\n\"CC\",\n\"CD\",\n\"CF\",\n\"CG\",\n\"CH\",\n\"CI\",\n\"CK\",\n\"CL\",\n\"CM\",\n\"CN\",\n\"CO\",\n\"CR\",\n\"CU\",\n\"CV\",\n\"CW\",\n\"CX\",\n\"CY\",\n\"CZ\",\n\"DE\",\n\"DJ\",\n\"DK\",\n\"DM\",\n\"DO\",\n\"DZ\",\n\"EC\",\n\"EE\",\n\"EG\",\n\"EH\",\n\"ER\",\n\"ES\",\n\"ET\",\n\"FI\",\n\"FJ\",\n\"FK\",\n\"FM\",\n\"FO\",\n\"FR\",\n\"GA\",\n\"GB\",\n\"GD\",\n\"GE\",\n\"GF\",\n\"GG\",\n\"GH\",\n\"GI\",\n\"GL\",\n\"GM\",\n\"GN\",\n\"GP\",\n\"GQ\",\n\"GR\",\n\"GS\",\n\"GT\",\n\"GU\",\n\"GW\",\n\"GY\",\n\"HK\",\n\"HM\",\n\"HN\",\n\"HR\",\n\"HT\",\n\"HU\",\n\"ID\",\n\"IE\",\n\"IL\",\n\"IM\",\n\"IN\",\n\"IO\",\n\"IQ\",\n\"IR\",\n\"IS\",\n\"IT\",\n\"JE\",\n\"JM\",\n\"JO\",\n\"JP\",\n\"KE\",\n\"KG\",\n\"KH\",\n\"KI\",\n\"KM\",\n\"KN\",\n\"KP\",\n\"KR\",\n\"KW\",\n\"KY\",\n\"KZ\",\n\"LA\",\n\"LB\",\n\"LC\",\n\"LI\",\n\"LK\",\n\"LR\",\n\"LS\",\n\"LT\",\n\"LU\",\n\"LV\",\n\"LY\",\n\"MA\",\n\"MC\",\n\"MD\",\n\"ME\",\n\"MF\",\n\"MG\",\n\"MH\",\n\"MK\",\n\"ML\",\n\"MM\",\n\"MN\",\n\"MO\",\n\"MP\",\n\"MQ\",\n\"MR\",\n\"MS\",\n\"MT\",\n\"MU\",\n\"MV\",\n\"MW\",\n\"MX\",\n\"MY\",\n\"MZ\",\n\"NA\",\n\"NC\",\n\"NE\",\n\"NF\",\n\"NG\",\n\"NI\",\n\"NL\",\n\"NO\",\n\"NP\",\n\"NR\",\n\"NU\",\n\"NZ\",\n\"OM\",\n\"PA\",\n\"PE\",\n\"PF\",\n\"PG\",\n\"PH\",\n\"PK\",\n\"PL\",\n\"PM\",\n\"PN\",\n\"PR\",\n\"PS\",\n\"PT\",\n\"PW\",\n\"PY\",\n\"QA\",\n\"RE\",\n\"RO\",\n\"RS\",\n\"RU\",\n\"RW\",\n\"SA\",\n\"SB\",\n\"SC\",\n\"SD\",\n\"SE\",\n\"SG\",\n\"SH\",\n\"SI\",\n\"SJ\",\n\"SK\",\n\"SL\",\n\"SM\",\n\"SN\",\n\"SO\",\n\"SR\",\n\"SS\",\n\"ST\",\n\"SV\",\n\"SX\",\n\"SY\",\n\"SZ\",\n\"TC\",\n\"TD\",\n\"TF\",\n\"TG\",\n\"TH\",\n\"TJ\",\n\"TK\",\n\"TL\",\n\"TM\",\n\"TN\",\n\"TO\",\n\"TR\",\n\"TT\",\n\"TV\",\n\"TW\",\n\"TZ\",\n\"UA\",\n\"UG\",\n\"UM\",\n\"US\",\n\"UY\",\n\"UZ\",\n\"VA\",\n\"VC\",\n\"VE\",\n\"VG\",\n\"VI\",\n\"VN\",\n\"VU\",\n\"WF\",\n\"WS\",\n\"YE\",\n\"YT\",\n\"ZA\",\n\"ZM\",\n\"ZW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "currency",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "customer_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The type of the customer. It can have one of the following values:\n- `company`: the customer is a company.\n- `individual`: the customer is an individual.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"company\",\n\"individual\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "email",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The email of the customer"
									}
								},
								{
									"name": "external_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The customer external unique identifier (provided by your own application)"
									}
								},
								{
									"name": "finalize_zero_amount_invoice",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies how invoices with a zero total amount should be handled:\n- `inherit`: (Default) Follows the organization-level configuration.\n- `finalize`: Invoices are issued and finalized even if the total amount is zero.\n- `skip`: Invoices with a total amount of zero are not finalized.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"inherit\",\n\"skip\",\n\"finalize\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "firstname",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "First name of the customer"
									}
								},
								{
									"name": "integration_customers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "external_customer_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The customer ID within the integration's system. If this field is not provided, Lago has the option to create a new customer record within the integration's system on behalf of the customer."
													}
												},
												{
													"name": "id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "A unique identifier for the integration customer object in the Lago application."
													}
												},
												{
													"name": "integration_code",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Unique code used to identify an integration connection."
													}
												},
												{
													"name": "integration_type",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The integration type used for accounting and tax syncs.\nAccepted values: `netsuite, anrok, xero`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"netsuite\",\n\"anrok\",\n\"xero\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "subsidiary_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "This optional field is needed only when working with `netsuite` connection."
													}
												},
												{
													"name": "sync_with_provider",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "Set this field to `true` if you want to create a customer record in the integration's system. This option is applicable only when the `external_customer_id` is null and the `sync_with_provider` field is set to `true`. By default, the value is set to `false`"
													}
												}
											]
										}
									}
								},
								{
									"name": "invoice_custom_section_codes",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "List of unique codes identifying the invoice custom sections."
									}
								},
								{
									"name": "lastname",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Last name of the customer"
									}
								},
								{
									"name": "legal_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The legal company name of the customer"
									}
								},
								{
									"name": "legal_number",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The legal company number of the customer"
									}
								},
								{
									"name": "logo_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The logo URL of the customer"
									}
								},
								{
									"name": "metadata",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "display_in_invoice",
													"bool": {
														"computed_optional_required": "required",
														"description": "Determines whether the item or information should be displayed in the invoice. If set to true, the item or information will be included and visible in the generated invoice. If set to false, the item or information will be excluded and not displayed in the invoice."
													}
												},
												{
													"name": "id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Identifier for the metadata object, only required when updating a key-value pair"
													}
												},
												{
													"name": "key",
													"string": {
														"computed_optional_required": "required",
														"description": "The metadata object key"
													}
												},
												{
													"name": "value",
													"string": {
														"computed_optional_required": "required",
														"description": "The metadata object value"
													}
												}
											]
										},
										"description": "Set of key-value pairs that you can attach to a customer. This can be useful for storing additional information about the customer in a structured format"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The full name of the customer"
									}
								},
								{
									"name": "net_payment_term",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized."
									}
								},
								{
									"name": "phone",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The phone number of the customer"
									}
								},
								{
									"name": "shipping_address",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "address_line1",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The first line of the billing address"
												}
											},
											{
												"name": "address_line2",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The second line of the billing address"
												}
											},
											{
												"name": "city",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The city of the customer's billing address"
												}
											},
											{
												"name": "country",
												"string": {
													"computed_optional_required": "computed_optional",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"AD\",\n\"AE\",\n\"AF\",\n\"AG\",\n\"AI\",\n\"AL\",\n\"AM\",\n\"AO\",\n\"AQ\",\n\"AR\",\n\"AS\",\n\"AT\",\n\"AU\",\n\"AW\",\n\"AX\",\n\"AZ\",\n\"BA\",\n\"BB\",\n\"BD\",\n\"BE\",\n\"BF\",\n\"BG\",\n\"BH\",\n\"BI\",\n\"BJ\",\n\"BL\",\n\"BM\",\n\"BN\",\n\"BO\",\n\"BQ\",\n\"BR\",\n\"BS\",\n\"BT\",\n\"BV\",\n\"BW\",\n\"BY\",\n\"BZ\",\n\"CA\",\n\"CC\",\n\"CD\",\n\"CF\",\n\"CG\",\n\"CH\",\n\"CI\",\n\"CK\",\n\"CL\",\n\"CM\",\n\"CN\",\n\"CO\",\n\"CR\",\n\"CU\",\n\"CV\",\n\"CW\",\n\"CX\",\n\"CY\",\n\"CZ\",\n\"DE\",\n\"DJ\",\n\"DK\",\n\"DM\",\n\"DO\",\n\"DZ\",\n\"EC\",\n\"EE\",\n\"EG\",\n\"EH\",\n\"ER\",\n\"ES\",\n\"ET\",\n\"FI\",\n\"FJ\",\n\"FK\",\n\"FM\",\n\"FO\",\n\"FR\",\n\"GA\",\n\"GB\",\n\"GD\",\n\"GE\",\n\"GF\",\n\"GG\",\n\"GH\",\n\"GI\",\n\"GL\",\n\"GM\",\n\"GN\",\n\"GP\",\n\"GQ\",\n\"GR\",\n\"GS\",\n\"GT\",\n\"GU\",\n\"GW\",\n\"GY\",\n\"HK\",\n\"HM\",\n\"HN\",\n\"HR\",\n\"HT\",\n\"HU\",\n\"ID\",\n\"IE\",\n\"IL\",\n\"IM\",\n\"IN\",\n\"IO\",\n\"IQ\",\n\"IR\",\n\"IS\",\n\"IT\",\n\"JE\",\n\"JM\",\n\"JO\",\n\"JP\",\n\"KE\",\n\"KG\",\n\"KH\",\n\"KI\",\n\"KM\",\n\"KN\",\n\"KP\",\n\"KR\",\n\"KW\",\n\"KY\",\n\"KZ\",\n\"LA\",\n\"LB\",\n\"LC\",\n\"LI\",\n\"LK\",\n\"LR\",\n\"LS\",\n\"LT\",\n\"LU\",\n\"LV\",\n\"LY\",\n\"MA\",\n\"MC\",\n\"MD\",\n\"ME\",\n\"MF\",\n\"MG\",\n\"MH\",\n\"MK\",\n\"ML\",\n\"MM\",\n\"MN\",\n\"MO\",\n\"MP\",\n\"MQ\",\n\"MR\",\n\"MS\",\n\"MT\",\n\"MU\",\n\"MV\",\n\"MW\",\n\"MX\",\n\"MY\",\n\"MZ\",\n\"NA\",\n\"NC\",\n\"NE\",\n\"NF\",\n\"NG\",\n\"NI\",\n\"NL\",\n\"NO\",\n\"NP\",\n\"NR\",\n\"NU\",\n\"NZ\",\n\"OM\",\n\"PA\",\n\"PE\",\n\"PF\",\n\"PG\",\n\"PH\",\n\"PK\",\n\"PL\",\n\"PM\",\n\"PN\",\n\"PR\",\n\"PS\",\n\"PT\",\n\"PW\",\n\"PY\",\n\"QA\",\n\"RE\",\n\"RO\",\n\"RS\",\n\"RU\",\n\"RW\",\n\"SA\",\n\"SB\",\n\"SC\",\n\"SD\",\n\"SE\",\n\"SG\",\n\"SH\",\n\"SI\",\n\"SJ\",\n\"SK\",\n\"SL\",\n\"SM\",\n\"SN\",\n\"SO\",\n\"SR\",\n\"SS\",\n\"ST\",\n\"SV\",\n\"SX\",\n\"SY\",\n\"SZ\",\n\"TC\",\n\"TD\",\n\"TF\",\n\"TG\",\n\"TH\",\n\"TJ\",\n\"TK\",\n\"TL\",\n\"TM\",\n\"TN\",\n\"TO\",\n\"TR\",\n\"TT\",\n\"TV\",\n\"TW\",\n\"TZ\",\n\"UA\",\n\"UG\",\n\"UM\",\n\"US\",\n\"UY\",\n\"UZ\",\n\"VA\",\n\"VC\",\n\"VE\",\n\"VG\",\n\"VI\",\n\"VN\",\n\"VU\",\n\"WF\",\n\"WS\",\n\"YE\",\n\"YT\",\n\"ZA\",\n\"ZM\",\n\"ZW\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "state",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The state of the customer's billing address"
												}
											},
											{
												"name": "zipcode",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The zipcode of the customer's billing address"
												}
											}
										],
										"description": "Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer."
									}
								},
								{
									"name": "skip_invoice_custom_sections",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Set to `true` to exclude all invoice custom sections from PDF generation for this customer only. False by default"
									}
								},
								{
									"name": "state",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The state of the customer's billing address"
									}
								},
								{
									"name": "tax_codes",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "List of unique code used to identify the taxes."
									}
								},
								{
									"name": "tax_identification_number",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The tax identification number of the customer"
									}
								},
								{
									"name": "timezone",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"UTC\",\n\"Africa/Algiers\",\n\"Africa/Cairo\",\n\"Africa/Casablanca\",\n\"Africa/Harare\",\n\"Africa/Johannesburg\",\n\"Africa/Monrovia\",\n\"Africa/Nairobi\",\n\"America/Argentina/Buenos_Aires\",\n\"America/Bogota\",\n\"America/Caracas\",\n\"America/Chicago\",\n\"America/Chihuahua\",\n\"America/Denver\",\n\"America/Godthab\",\n\"America/Guatemala\",\n\"America/Guyana\",\n\"America/Halifax\",\n\"America/Indiana/Indianapolis\",\n\"America/Juneau\",\n\"America/La_Paz\",\n\"America/Lima\",\n\"America/Los_Angeles\",\n\"America/Mazatlan\",\n\"America/Mexico_City\",\n\"America/Monterrey\",\n\"America/Montevideo\",\n\"America/New_York\",\n\"America/Phoenix\",\n\"America/Puerto_Rico\",\n\"America/Regina\",\n\"America/Santiago\",\n\"America/Sao_Paulo\",\n\"America/St_Johns\",\n\"America/Tijuana\",\n\"Asia/Almaty\",\n\"Asia/Baghdad\",\n\"Asia/Baku\",\n\"Asia/Bangkok\",\n\"Asia/Chongqing\",\n\"Asia/Colombo\",\n\"Asia/Dhaka\",\n\"Asia/Hong_Kong\",\n\"Asia/Irkutsk\",\n\"Asia/Jakarta\",\n\"Asia/Jerusalem\",\n\"Asia/Kabul\",\n\"Asia/Kamchatka\",\n\"Asia/Karachi\",\n\"Asia/Kathmandu\",\n\"Asia/Kolkata\",\n\"Asia/Krasnoyarsk\",\n\"Asia/Kuala_Lumpur\",\n\"Asia/Kuwait\",\n\"Asia/Magadan\",\n\"Asia/Muscat\",\n\"Asia/Novosibirsk\",\n\"Asia/Rangoon\",\n\"Asia/Riyadh\",\n\"Asia/Seoul\",\n\"Asia/Shanghai\",\n\"Asia/Singapore\",\n\"Asia/Srednekolymsk\",\n\"Asia/Taipei\",\n\"Asia/Tashkent\",\n\"Asia/Tbilisi\",\n\"Asia/Tehran\",\n\"Asia/Tokyo\",\n\"Asia/Ulaanbaatar\",\n\"Asia/Urumqi\",\n\"Asia/Vladivostok\",\n\"Asia/Yakutsk\",\n\"Asia/Yekaterinburg\",\n\"Asia/Yerevan\",\n\"Atlantic/Azores\",\n\"Atlantic/Cape_Verde\",\n\"Atlantic/South_Georgia\",\n\"Australia/Adelaide\",\n\"Australia/Brisbane\",\n\"Australia/Darwin\",\n\"Australia/Hobart\",\n\"Australia/Melbourne\",\n\"Australia/Perth\",\n\"Australia/Sydney\",\n\"Europe/Amsterdam\",\n\"Europe/Athens\",\n\"Europe/Belgrade\",\n\"Europe/Berlin\",\n\"Europe/Bratislava\",\n\"Europe/Brussels\",\n\"Europe/Bucharest\",\n\"Europe/Budapest\",\n\"Europe/Copenhagen\",\n\"Europe/Dublin\",\n\"Europe/Helsinki\",\n\"Europe/Istanbul\",\n\"Europe/Kaliningrad\",\n\"Europe/Kiev\",\n\"Europe/Lisbon\",\n\"Europe/Ljubljana\",\n\"Europe/London\",\n\"Europe/Madrid\",\n\"Europe/Minsk\",\n\"Europe/Moscow\",\n\"Europe/Paris\",\n\"Europe/Prague\",\n\"Europe/Riga\",\n\"Europe/Rome\",\n\"Europe/Samara\",\n\"Europe/Sarajevo\",\n\"Europe/Skopje\",\n\"Europe/Sofia\",\n\"Europe/Stockholm\",\n\"Europe/Tallinn\",\n\"Europe/Vienna\",\n\"Europe/Vilnius\",\n\"Europe/Volgograd\",\n\"Europe/Warsaw\",\n\"Europe/Zagreb\",\n\"Europe/Zurich\",\n\"GMT+12\",\n\"Pacific/Apia\",\n\"Pacific/Auckland\",\n\"Pacific/Chatham\",\n\"Pacific/Fakaofo\",\n\"Pacific/Fiji\",\n\"Pacific/Guadalcanal\",\n\"Pacific/Guam\",\n\"Pacific/Honolulu\",\n\"Pacific/Majuro\",\n\"Pacific/Midway\",\n\"Pacific/Noumea\",\n\"Pacific/Pago_Pago\",\n\"Pacific/Port_Moresby\",\n\"Pacific/Tongatapu\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "url",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The custom website URL of the customer"
									}
								},
								{
									"name": "zipcode",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The zipcode of the customer's billing address"
									}
								}
							]
						}
					},
					{
						"name": "meta",
						"single_nested": {
							"computed_optional_required": "computed",
							"attributes": [
								{
									"name": "current_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Current page."
									}
								},
								{
									"name": "next_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Next page."
									}
								},
								{
									"name": "prev_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Previous page."
									}
								},
								{
									"name": "total_count",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Total number of records."
									}
								},
								{
									"name": "total_pages",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Total number of pages."
									}
								}
							]
						}
					},
					{
						"name": "usage_periods",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "customer_usage",
										"single_nested": {
											"computed_optional_required": "computed",
											"attributes": [
												{
													"name": "amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The amount in cents, tax excluded."
													}
												},
												{
													"name": "charges_usage",
													"list_nested": {
														"computed_optional_required": "computed",
														"nested_object": {
															"attributes": [
																{
																	"name": "amount_cents",
																	"int64": {
																		"computed_optional_required": "computed",
																		"description": "The amount in cents, tax excluded, consumed by the customer for a specific charge item."
																	}
																},
																{
																	"name": "amount_currency",
																	"string": {
																		"computed_optional_required": "computed"
																	}
																},
																{
																	"name": "billable_metric",
																	"single_nested": {
																		"computed_optional_required": "computed",
																		"attributes": [
																			{
																				"name": "aggregation_type",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "The aggregation type of the billable metric used for this charge. Possible values are `count_agg`, `sum_agg`, `max_agg` or `unique_count_agg`."
																				}
																			},
																			{
																				"name": "code",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "The code of the billable metric used for this charge."
																				}
																			},
																			{
																				"name": "lago_id",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Unique identifier assigned to the billable metric within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the billable metric's record within the Lago system."
																				}
																			},
																			{
																				"name": "name",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "The name of the billable metric used for this charge."
																				}
																			}
																		],
																		"description": "The related billable metric object."
																	}
																},
																{
																	"name": "charge",
																	"single_nested": {
																		"computed_optional_required": "computed",
																		"attributes": [
																			{
																				"name": "charge_model",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "The pricing model applied to this charge. Possible values are standard, `graduated`, `percentage`, `package` or `volume`."
																				}
																			},
																			{
																				"name": "invoice_display_name",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
																				}
																			},
																			{
																				"name": "lago_id",
																				"string": {
																					"computed_optional_required": "computed",
																					"description": "Unique identifier assigned to the charge within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the charge's record within the Lago system."
																				}
																			}
																		],
																		"description": "Object listing all the properties for a specific charge item."
																	}
																},
																{
																	"name": "events_count",
																	"int64": {
																		"computed_optional_required": "computed",
																		"description": "The quantity of usage events that have been recorded for a particular charge during the specified time period. These events may also be referred to as the number of transactions in some contexts."
																	}
																},
																{
																	"name": "filters",
																	"list_nested": {
																		"computed_optional_required": "computed",
																		"nested_object": {
																			"attributes": [
																				{
																					"name": "amount_cents",
																					"int64": {
																						"computed_optional_required": "computed",
																						"description": "The amount in cents, tax excluded, consumed for a specific charge filter related to a charge item."
																					}
																				},
																				{
																					"name": "events_count",
																					"int64": {
																						"computed_optional_required": "computed",
																						"description": "The quantity of usage events that have been recorded for a particular charge filter during the specified time period. These events may also be referred to as the number of transactions in some contexts."
																					}
																				},
																				{
																					"name": "invoice_display_name",
																					"string": {
																						"computed_optional_required": "computed",
																						"description": "Specifies the name that will be displayed on an invoice."
																					}
																				},
																				{
																					"name": "units",
																					"string": {
																						"computed_optional_required": "computed",
																						"description": "The number of units consumed for a specific charge filter related to a charge item."
																					}
																				},
																				{
																					"name": "values",
																					"map": {
																						"computed_optional_required": "computed",
																						"element_type": {
																							"string": {}
																						},
																						"description": "List of filter values applied to the usage."
																					}
																				}
																			]
																		},
																		"description": "Array of filter object, representing multiple dimensions for a charge item."
																	}
																},
																{
																	"name": "grouped_usage",
																	"list_nested": {
																		"computed_optional_required": "computed",
																		"nested_object": {
																			"attributes": [
																				{
																					"name": "amount_cents",
																					"int64": {
																						"computed_optional_required": "computed",
																						"description": "The amount in cents, tax excluded, consumed for a specific group related to a charge item."
																					}
																				},
																				{
																					"name": "events_count",
																					"int64": {
																						"computed_optional_required": "computed",
																						"description": "The quantity of usage events that have been recorded for a particular charge during the specified time period. These events may also be referred to as the number of transactions in some contexts."
																					}
																				},
																				{
																					"name": "filters",
																					"list_nested": {
																						"computed_optional_required": "computed",
																						"nested_object": {
																							"attributes": [
																								{
																									"name": "amount_cents",
																									"int64": {
																										"computed_optional_required": "computed",
																										"description": "The amount in cents, tax excluded, consumed for a specific charge filter related to a charge item."
																									}
																								},
																								{
																									"name": "events_count",
																									"int64": {
																										"computed_optional_required": "computed",
																										"description": "The quantity of usage events that have been recorded for a particular charge filter during the specified time period. These events may also be referred to as the number of transactions in some contexts."
																									}
																								},
																								{
																									"name": "invoice_display_name",
																									"string": {
																										"computed_optional_required": "computed",
																										"description": "Specifies the name that will be displayed on an invoice."
																									}
																								},
																								{
																									"name": "units",
																									"string": {
																										"computed_optional_required": "computed",
																										"description": "The number of units consumed for a specific charge filter related to a charge item."
																									}
																								},
																								{
																									"name": "values",
																									"map": {
																										"computed_optional_required": "computed",
																										"element_type": {
																											"string": {}
																										},
																										"description": "List of filter values applied to the usage."
																									}
																								}
																							]
																						},
																						"description": "Array of filter object, representing multiple dimensions for a charge item."
																					}
																				},
																				{
																					"name": "grouped_by",
																					"map": {
																						"computed_optional_required": "computed",
																						"element_type": {
																							"string": {}
																						},
																						"description": "Key value list of event properties aggregated by the charge model"
																					}
																				},
																				{
																					"name": "units",
																					"string": {
																						"computed_optional_required": "computed",
																						"description": "The number of units consumed for a specific group related to a charge item."
																					}
																				}
																			]
																		},
																		"description": "Array of aggregated fees, grouped by the event properties defined in a `standard` charge model."
																	}
																},
																{
																	"name": "units",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "The number of units consumed by the customer for a specific charge item."
																	}
																}
															]
														},
														"description": "Array of charges that comprise the current usage. It contains detailed information about individual charge items associated with the usage."
													}
												},
												{
													"name": "currency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "from_datetime",
													"string": {
														"computed_optional_required": "computed",
														"description": "The lower bound of the billing period, expressed in the ISO 8601 datetime format in Coordinated Universal Time (UTC)."
													}
												},
												{
													"name": "issuing_date",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date of creation of the invoice."
													}
												},
												{
													"name": "lago_invoice_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "A unique identifier associated with the invoice related to this particular usage record."
													}
												},
												{
													"name": "taxes_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The tax amount in cents."
													}
												},
												{
													"name": "to_datetime",
													"string": {
														"computed_optional_required": "computed",
														"description": "The upper bound of the billing period, expressed in the ISO 8601 datetime format in Coordinated Universal Time (UTC)."
													}
												},
												{
													"name": "total_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The total amount in cents, tax included."
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Page number."
						}
					},
					{
						"name": "per_page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Number of records per page."
						}
					},
					{
						"name": "external_customer_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The customer external unique identifier (provided by your own application)."
						}
					},
					{
						"name": "external_subscription_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The unique identifier of the subscription within your application."
						}
					},
					{
						"name": "billable_metric_code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Billable metric code filter to apply to the charge usage"
						}
					},
					{
						"name": "periods_count",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Number of past billing period to returns in the result"
						}
					}
				]
			}
		},
		{
			"name": "fees",
			"schema": {
				"attributes": [
					{
						"name": "fee",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "payment_status",
									"string": {
										"computed_optional_required": "required",
										"description": "The payment status of the fee. Possible values are `pending`, `succeeded`, `failed` or `refunded`.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"pending\",\n\"succeeded\",\n\"failed\",\n\"refunded\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The cost of this specific fee, excluding any applicable taxes."
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "amount_details",
									"single_nested": {
										"computed_optional_required": "computed",
										"attributes": [
											{
												"name": "fixed_fee_total_amount",
												"string": {
													"computed_optional_required": "computed",
													"description": "Total amount to charge for received paid_events for the Percentage charge model."
												}
											},
											{
												"name": "fixed_fee_unit_amount",
												"string": {
													"computed_optional_required": "computed",
													"description": "Fixed fee unit price per received paid_event for the Percentage charge model."
												}
											},
											{
												"name": "free_events",
												"int64": {
													"computed_optional_required": "computed",
													"description": "Total number of free events allowed for the Percentage charge model."
												}
											},
											{
												"name": "free_units",
												"string": {
													"computed_optional_required": "computed",
													"description": "The quantity of units that are provided free of charge for each billing period in a `package` charge model."
												}
											},
											{
												"name": "graduated_percentage_ranges",
												"list_nested": {
													"computed_optional_required": "computed",
													"nested_object": {
														"attributes": [
															{
																"name": "flat_unit_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Flat unit amount within a specified tier."
																}
															},
															{
																"name": "from_value",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "Lower value of a tier. It is either 0 or the previous range's `to_value + 1`."
																}
															},
															{
																"name": "per_unit_total_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total amount of received units to be charged within a specified tier."
																}
															},
															{
																"name": "rate",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Percentage rate applied within a specified tier."
																}
															},
															{
																"name": "to_value",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "Highest value of a tier.\n- This value is higher than the from_value of the same tier.\n- This value is null for the last tier."
																}
															},
															{
																"name": "total_with_flat_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total amount to be charged for a specific tier, taking into account the flat_unit_amount and the per_unit_total_amount."
																}
															},
															{
																"name": "units",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total units received in Lago."
																}
															}
														]
													},
													"description": "Graduated percentage ranges, used for a `graduated_percentage` charge model."
												}
											},
											{
												"name": "graduated_ranges",
												"list_nested": {
													"computed_optional_required": "computed",
													"nested_object": {
														"attributes": [
															{
																"name": "flat_unit_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Flat unit amount within a specified tier."
																}
															},
															{
																"name": "from_value",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "Lower value of a tier. It is either 0 or the previous range's `to_value + 1`."
																}
															},
															{
																"name": "per_unit_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Amount per unit within a specified tier."
																}
															},
															{
																"name": "per_unit_total_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total amount of received units to be charged within a specified tier."
																}
															},
															{
																"name": "to_value",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "Highest value of a tier.\n- This value is higher than the from_value of the same tier.\n- This value is null for the last tier."
																}
															},
															{
																"name": "total_with_flat_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total amount to be charged for a specific tier, taking into account the flat_unit_amount and the per_unit_total_amount."
																}
															},
															{
																"name": "units",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total units received in Lago."
																}
															}
														]
													},
													"description": "Graduated ranges, used for a `graduated` charge model."
												}
											},
											{
												"name": "min_max_adjustment_total_amount",
												"string": {
													"computed_optional_required": "computed",
													"description": "Total adjustment amount linked to minimum and maximum spending per transaction for the Percentage charge model."
												}
											},
											{
												"name": "paid_events",
												"int64": {
													"computed_optional_required": "computed",
													"description": "Total number of paid events for the Percentage charge model."
												}
											},
											{
												"name": "paid_units",
												"string": {
													"computed_optional_required": "computed",
													"description": "The quantity of units that are not provided free of charge for each billing period in a `package` charge model."
												}
											},
											{
												"name": "per_package_size",
												"int64": {
													"computed_optional_required": "computed",
													"description": "The quantity of units included, defined for Package or Percentage charge model."
												}
											},
											{
												"name": "per_package_unit_amount",
												"string": {
													"computed_optional_required": "computed",
													"description": "Total amount to charge for received paid_units, defined for Package or Percentage charge model."
												}
											},
											{
												"name": "per_unit_total_amount",
												"string": {
													"computed_optional_required": "computed",
													"description": "Total amount of received units to be charged for the Percentage charge model."
												}
											},
											{
												"name": "rate",
												"string": {
													"computed_optional_required": "computed",
													"description": "Percentage rate applied for the Percentage charge model."
												}
											},
											{
												"name": "units",
												"string": {
													"computed_optional_required": "computed",
													"description": "The total units received in Lago for the Percentage charge model."
												}
											},
											{
												"name": "volume_ranges",
												"list_nested": {
													"computed_optional_required": "computed",
													"nested_object": {
														"attributes": [
															{
																"name": "flat_unit_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The unit price, excluding tax, for a specific tier of a `volume` charge model."
																}
															},
															{
																"name": "per_unit_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The flat amount for a whole tier, excluding tax, for a `volume` charge model."
																}
															},
															{
																"name": "per_unit_total_amount",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Total amount of received units to be charged."
																}
															}
														]
													},
													"description": "Volume ranges, used for a `volume` charge model."
												}
											}
										],
										"description": "List of all unit amount details for calculating the fee."
									}
								},
								{
									"name": "applied_taxes",
									"list_nested": {
										"computed_optional_required": "computed",
										"nested_object": {
											"attributes": [
												{
													"name": "amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "Amount of the tax"
													}
												},
												{
													"name": "amount_currency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date and time when the applied tax was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the applied tax was initially created."
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the applied tax, created by Lago."
													}
												},
												{
													"name": "lago_tax_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the tax, created by Lago."
													}
												},
												{
													"name": "tax_code",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique code used to identify the tax associated with the API request."
													}
												},
												{
													"name": "tax_description",
													"string": {
														"computed_optional_required": "computed",
														"description": "Internal description of the taxe"
													}
												},
												{
													"name": "tax_name",
													"string": {
														"computed_optional_required": "computed",
														"description": "Name of the tax."
													}
												},
												{
													"name": "tax_rate",
													"number": {
														"computed_optional_required": "computed",
														"description": "The percentage rate of the tax"
													}
												}
											]
										},
										"description": "List of fee applied taxes"
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the fee was created. It is provided in Coordinated Universal Time (UTC) format."
									}
								},
								{
									"name": "event_transaction_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the transaction. This field is specifically displayed when the fee type is `charge` and the payment for the fee is made in advance (`pay_in_advance` is set to `true`)."
									}
								},
								{
									"name": "events_count",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The number of events that have been sent and used to charge the customer. This field indicates the count or quantity of events that have been processed and considered in the charging process."
									}
								},
								{
									"name": "external_customer_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the customer in your application. This field is specifically displayed when the fee type is charge or subscription."
									}
								},
								{
									"name": "external_subscription_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the subscription in your application. This field is specifically displayed when the fee type is charge or subscription."
									}
								},
								{
									"name": "failed_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the payment for the fee failed to process. It is provided in Coordinated Universal Time (UTC) format."
									}
								},
								{
									"name": "from_date",
									"string": {
										"computed_optional_required": "computed",
										"description": "The beginning date of the period that the fee covers. It is applicable only to `subscription` and `charge` fees. This field indicates the start date of the billing period or subscription period associated with the fee."
									}
								},
								{
									"name": "invoice_display_name",
									"string": {
										"computed_optional_required": "computed",
										"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
									}
								},
								{
									"name": "invoiceable",
									"bool": {
										"computed_optional_required": "computed",
										"description": "Flag that indicates whether the fee was included on the invoice. It serves as a boolean value, where `true` represents that the fee was included on the invoice, and `false` indicates that the fee was not included on the invoice."
									}
								},
								{
									"name": "item",
									"single_nested": {
										"computed_optional_required": "computed",
										"attributes": [
											{
												"name": "code",
												"string": {
													"computed_optional_required": "computed",
													"description": "The code of the fee item. It can be the code of the `add-on`, the code of the `charge`, the code of the `credit` or the code of the `subscription`."
												}
											},
											{
												"name": "filter_invoice_display_name",
												"string": {
													"computed_optional_required": "computed",
													"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the actual charge filter values will be used as the default display name."
												}
											},
											{
												"name": "filters",
												"map": {
													"computed_optional_required": "computed",
													"element_type": {
														"list": {
															"element_type": {
																"string": {}
															}
														}
													},
													"description": "Key value list of event properties"
												}
											},
											{
												"name": "grouped_by",
												"map": {
													"computed_optional_required": "computed",
													"element_type": {
														"string": {}
													},
													"description": "Key value list of event properties aggregated by the charge model"
												}
											},
											{
												"name": "invoice_display_name",
												"string": {
													"computed_optional_required": "computed",
													"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
												}
											},
											{
												"name": "item_type",
												"string": {
													"computed_optional_required": "computed",
													"description": "The type of the fee item. Possible values are `AddOn`, `BillableMetric`, `WalletTransaction`, `Subscription` or `Commitment`."
												}
											},
											{
												"name": "lago_item_id",
												"string": {
													"computed_optional_required": "computed",
													"description": "Unique identifier of the fee item, created by Lago. It can be the identifier of the `add-on`, the `charge`, the `credit`, the `subscription` or the `commitment`."
												}
											},
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed",
													"description": "The name of the fee item. It can be the name of the `add-on`, the `charge`, the `credit`, the `subscription` or the `commitment`."
												}
											},
											{
												"name": "type",
												"string": {
													"computed_optional_required": "computed",
													"description": "The fee type. Possible values are `add-on`, `charge`, `credit`, `subscription` or `commitment`."
												}
											}
										],
										"description": "Item attached to the fee"
									}
								},
								{
									"name": "lago_charge_filter_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the charge filter that the fee belongs to"
									}
								},
								{
									"name": "lago_charge_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the charge that the fee belongs to"
									}
								},
								{
									"name": "lago_customer_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the customer, created by Lago. This field is specifically displayed when the fee type is charge or subscription."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee's record within the Lago system."
									}
								},
								{
									"name": "lago_invoice_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the invoice that the fee belongs to"
									}
								},
								{
									"name": "lago_subscription_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the subscription, created by Lago. This field is specifically displayed when the fee type is charge or subscription."
									}
								},
								{
									"name": "lago_true_up_fee_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the true-up fee when a minimum has been set to the charge. This identifier helps to distinguish and manage the true-up fee associated with the charge, which may be applicable when a minimum threshold or limit is set for the charge amount."
									}
								},
								{
									"name": "lago_true_up_parent_fee_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the parent fee on which the true-up fee is assigned. This identifier establishes the relationship between the parent fee and the associated true-up fee."
									}
								},
								{
									"name": "pay_in_advance",
									"bool": {
										"computed_optional_required": "computed",
										"description": "Flag that indicates whether the fee was paid in advance. It serves as a boolean value, where `true` represents that the fee was paid in advance (straightaway), and `false` indicates that the fee was not paid in arrears (at the end of the period)."
									}
								},
								{
									"name": "precise_amount",
									"string": {
										"computed_optional_required": "computed",
										"description": "The cost of this specific fee, excluding any applicable taxes, with precision."
									}
								},
								{
									"name": "precise_total_amount",
									"string": {
										"computed_optional_required": "computed",
										"description": "The cost of this specific fee, including any applicable taxes, with precision."
									}
								},
								{
									"name": "precise_unit_amount",
									"string": {
										"computed_optional_required": "computed",
										"description": "The unit amount of the fee per unit, with precision."
									}
								},
								{
									"name": "refunded_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the payment for the fee was refunded. It is provided in Coordinated Universal Time (UTC) format"
									}
								},
								{
									"name": "self_billed",
									"bool": {
										"computed_optional_required": "computed",
										"description": "Indicates if the fee belongs to self-billed invoice. Self-billing is a process where an organization creates the invoice on behalf of the partner."
									}
								},
								{
									"name": "succeeded_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the payment for the fee was successfully processed. It is provided in Coordinated Universal Time (UTC) format."
									}
								},
								{
									"name": "taxes_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The cost of the tax associated with this specific fee."
									}
								},
								{
									"name": "taxes_precise_amount",
									"string": {
										"computed_optional_required": "computed",
										"description": "The cost of the tax associated with this specific fee, with precision."
									}
								},
								{
									"name": "taxes_rate",
									"number": {
										"computed_optional_required": "computed",
										"description": "The tax rate associated with this specific fee."
									}
								},
								{
									"name": "to_date",
									"string": {
										"computed_optional_required": "computed",
										"description": "The ending date of the period that the fee covers. It is applicable only to `subscription` and `charge` fees. This field indicates the end date of the billing period or subscription period associated with the fee."
									}
								},
								{
									"name": "total_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The cost of this specific fee, including any applicable taxes."
									}
								},
								{
									"name": "total_amount_currency",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "units",
									"string": {
										"computed_optional_required": "computed",
										"description": "The number of units used to charge the customer. This field indicates the quantity or count of units consumed or utilized in the context of the charge. It helps in determining the basis for calculating the fee or cost associated with the usage of the service or product provided to the customer."
									}
								}
							]
						}
					},
					{
						"name": "lago_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee's record within the Lago system."
						}
					}
				]
			}
		},
		{
			"name": "invoices",
			"schema": {
				"attributes": [
					{
						"name": "invoice",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "currency",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "external_customer_id",
									"string": {
										"computed_optional_required": "required",
										"description": "Unique identifier assigned to the customer in your application."
									}
								},
								{
									"name": "fees",
									"list_nested": {
										"computed_optional_required": "required",
										"nested_object": {
											"attributes": [
												{
													"name": "add_on_code",
													"string": {
														"computed_optional_required": "required",
														"description": "The code of the add-on used as invoice item."
													}
												},
												{
													"name": "description",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "This is a description"
													}
												},
												{
													"name": "invoice_display_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
													}
												},
												{
													"name": "tax_codes",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "List of unique code used to identify the taxes."
													}
												},
												{
													"name": "unit_amount_cents",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "The amount of the fee per unit, expressed in cents. By default, the amount of the add-on is used."
													}
												},
												{
													"name": "units",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The quantity of units associated with the fee. By default, only 1 unit is added to the invoice.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "regexp"
																		},
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																}
															}
														]
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "lago_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the invoice within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the invoice's record within the Lago system."
						}
					}
				]
			}
		},
		{
			"name": "payment_requests",
			"schema": {
				"attributes": [
					{
						"name": "payment_request",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "email",
									"string": {
										"computed_optional_required": "required",
										"description": "The customer's email address used for sending dunning notifications"
									}
								},
								{
									"name": "external_customer_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The customer external unique identifier (provided by your own application)"
									}
								},
								{
									"name": "lago_invoice_ids",
									"list": {
										"computed_optional_required": "required",
										"element_type": {
											"string": {}
										},
										"description": "A list of Lago IDs for the customer's overdue invoices to start the dunning process"
									}
								},
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The sum of the total amounts of all the invoices included in the payment request, expressed in cents."
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed"
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the payment request was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the payment request was initially created."
									}
								},
								{
									"name": "customer",
									"single_nested": {
										"computed_optional_required": "computed",
										"attributes": [
											{
												"name": "account_type",
												"string": {
													"computed_optional_required": "computed",
													"description": "The type of the account. It can have one of the following values:\n- `customer`: the account is a customer.\n- `partner`: the account is a partner."
												}
											},
											{
												"name": "address_line1",
												"string": {
													"computed_optional_required": "computed",
													"description": "The first line of the billing address"
												}
											},
											{
												"name": "address_line2",
												"string": {
													"computed_optional_required": "computed",
													"description": "The second line of the billing address"
												}
											},
											{
												"name": "applicable_timezone",
												"string": {
													"computed_optional_required": "computed"
												}
											},
											{
												"name": "billing_configuration",
												"single_nested": {
													"computed_optional_required": "computed",
													"attributes": [
														{
															"name": "document_locale",
															"string": {
																"computed_optional_required": "computed",
																"description": "The document locale, specified in the ISO 639-1 format. This field represents the language or locale used for the documents issued by Lago"
															}
														},
														{
															"name": "invoice_grace_period",
															"int64": {
																"computed_optional_required": "computed",
																"description": "The grace period, expressed in days, for the invoice. This period refers to the additional time granted to the customer beyond the invoice due date to adjust usage and line items"
															}
														},
														{
															"name": "payment_provider",
															"string": {
																"computed_optional_required": "computed",
																"description": "The payment provider utilized to initiate payments for invoices issued by Lago.\nAccepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`."
															}
														},
														{
															"name": "payment_provider_code",
															"string": {
																"computed_optional_required": "computed",
																"description": "Unique code used to identify a payment provider connection."
															}
														},
														{
															"name": "provider_customer_id",
															"string": {
																"computed_optional_required": "computed",
																"description": "The customer ID within the payment provider's system. If this field is not provided, Lago has the option to create a new customer record within the payment provider's system on behalf of the customer"
															}
														},
														{
															"name": "provider_payment_methods",
															"list": {
																"computed_optional_required": "computed",
																"element_type": {
																	"string": {}
																},
																"description": "Specifies the available payment methods that can be used for this customer when `payment_provider` is set to `stripe`. The `provider_payment_methods` field is an array that allows multiple payment options to be defined. If this field is not explicitly set, the payment methods will be set to `card`. For now, possible values are `card`, `sepa_debit`, `us_bank_account`, `bacs_debit`, `boleto`, `link`, `crypto` and `customer_balance`. Note that when `link` is selected, `card` should also be provided in the array. When `customer_balance` is selected, no other payment can be selected."
															}
														},
														{
															"name": "sync",
															"bool": {
																"computed_optional_required": "computed",
																"description": "Set this field to `true` if you want to create the customer in the payment provider synchronously with the customer creation process in Lago. This option is applicable only when the `provider_customer_id` is `null` and the customer is automatically created in the payment provider through Lago. By default, the value is set to `false`"
															}
														},
														{
															"name": "sync_with_provider",
															"bool": {
																"computed_optional_required": "computed",
																"description": "Set this field to `true` if you want to create a customer record in the payment provider's system. This option is applicable only when the `provider_customer_id` is null and the `sync_with_provider` field is set to `true`. By default, the value is set to `false`"
															}
														}
													],
													"description": "Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer."
												}
											},
											{
												"name": "city",
												"string": {
													"computed_optional_required": "computed",
													"description": "The city of the customer's billing address"
												}
											},
											{
												"name": "country",
												"string": {
													"computed_optional_required": "computed"
												}
											},
											{
												"name": "created_at",
												"string": {
													"computed_optional_required": "computed",
													"description": "The date of the customer creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the customer object was created"
												}
											},
											{
												"name": "currency",
												"string": {
													"computed_optional_required": "computed"
												}
											},
											{
												"name": "customer_type",
												"string": {
													"computed_optional_required": "computed",
													"description": "The type of the customer. It can have one of the following values:\n- `company`: the customer is a company.\n- `individual`: the customer is an individual."
												}
											},
											{
												"name": "email",
												"string": {
													"computed_optional_required": "computed",
													"description": "The email of the customer"
												}
											},
											{
												"name": "external_id",
												"string": {
													"computed_optional_required": "computed",
													"description": "The customer external unique identifier (provided by your own application)"
												}
											},
											{
												"name": "finalize_zero_amount_invoice",
												"string": {
													"computed_optional_required": "computed",
													"description": "Specifies how invoices with a zero total amount should be handled:\n- `inherit`: (Default) Follows the organization-level configuration.\n- `finalize`: Invoices are issued and finalized even if the total amount is zero.\n- `skip`: Invoices with a total amount of zero are not finalized."
												}
											},
											{
												"name": "firstname",
												"string": {
													"computed_optional_required": "computed",
													"description": "First name of the customer"
												}
											},
											{
												"name": "lago_id",
												"string": {
													"computed_optional_required": "computed",
													"description": "Unique identifier assigned to the customer within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the customer's record within the Lago system"
												}
											},
											{
												"name": "lastname",
												"string": {
													"computed_optional_required": "computed",
													"description": "Last name of the customer"
												}
											},
											{
												"name": "legal_name",
												"string": {
													"computed_optional_required": "computed",
													"description": "The legal company name of the customer"
												}
											},
											{
												"name": "legal_number",
												"string": {
													"computed_optional_required": "computed",
													"description": "The legal company number of the customer"
												}
											},
											{
												"name": "logo_url",
												"string": {
													"computed_optional_required": "computed",
													"description": "The logo URL of the customer"
												}
											},
											{
												"name": "metadata",
												"list_nested": {
													"computed_optional_required": "computed",
													"nested_object": {
														"attributes": [
															{
																"name": "created_at",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The date of the metadata object creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the metadata object was created"
																}
															},
															{
																"name": "display_in_invoice",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Determines whether the item or information should be displayed in the invoice. If set to true, the item or information will be included and visible in the generated invoice. If set to false, the item or information will be excluded and not displayed in the invoice."
																}
															},
															{
																"name": "key",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The metadata object key"
																}
															},
															{
																"name": "lago_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "A unique identifier for the customer metadata object in the Lago application. Can be used to update a key-value pair"
																}
															},
															{
																"name": "value",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The metadata object value"
																}
															}
														]
													}
												}
											},
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed",
													"description": "The full name of the customer"
												}
											},
											{
												"name": "net_payment_term",
												"int64": {
													"computed_optional_required": "computed",
													"description": "The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized."
												}
											},
											{
												"name": "phone",
												"string": {
													"computed_optional_required": "computed",
													"description": "The phone number of the customer"
												}
											},
											{
												"name": "sequential_id",
												"int64": {
													"computed_optional_required": "computed",
													"description": "The unique identifier assigned to the customer within the organization's scope. This identifier is used to track and reference the customer's order of creation within the organization's system. It ensures that each customer has a distinct `sequential_id`` associated with them, allowing for easy identification and sorting based on the order of creation"
												}
											},
											{
												"name": "shipping_address",
												"single_nested": {
													"computed_optional_required": "computed",
													"attributes": [
														{
															"name": "address_line1",
															"string": {
																"computed_optional_required": "computed",
																"description": "The first line of the billing address"
															}
														},
														{
															"name": "address_line2",
															"string": {
																"computed_optional_required": "computed",
																"description": "The second line of the billing address"
															}
														},
														{
															"name": "city",
															"string": {
																"computed_optional_required": "computed",
																"description": "The city of the customer's billing address"
															}
														},
														{
															"name": "country",
															"string": {
																"computed_optional_required": "computed"
															}
														},
														{
															"name": "state",
															"string": {
																"computed_optional_required": "computed",
																"description": "The state of the customer's billing address"
															}
														},
														{
															"name": "zipcode",
															"string": {
																"computed_optional_required": "computed",
																"description": "The zipcode of the customer's billing address"
															}
														}
													],
													"description": "Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer."
												}
											},
											{
												"name": "skip_invoice_custom_sections",
												"bool": {
													"computed_optional_required": "computed",
													"description": "Set to true to exclude all invoice custom sections from PDF generation for this customer only."
												}
											},
											{
												"name": "slug",
												"string": {
													"computed_optional_required": "computed",
													"description": "A concise and unique identifier for the customer, formed by combining the Organization's `name`, `id`, and customer's `sequential_id`"
												}
											},
											{
												"name": "state",
												"string": {
													"computed_optional_required": "computed",
													"description": "The state of the customer's billing address"
												}
											},
											{
												"name": "tax_identification_number",
												"string": {
													"computed_optional_required": "computed",
													"description": "The tax identification number of the customer"
												}
											},
											{
												"name": "timezone",
												"string": {
													"computed_optional_required": "computed"
												}
											},
											{
												"name": "updated_at",
												"string": {
													"computed_optional_required": "computed",
													"description": "The date of the customer update, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The update_date provides a standardized and internationally recognized timestamp for when the customer object was updated"
												}
											},
											{
												"name": "url",
												"string": {
													"computed_optional_required": "computed",
													"description": "The custom website URL of the customer"
												}
											},
											{
												"name": "zipcode",
												"string": {
													"computed_optional_required": "computed",
													"description": "The zipcode of the customer's billing address"
												}
											}
										]
									}
								},
								{
									"name": "invoices",
									"list_nested": {
										"computed_optional_required": "computed",
										"nested_object": {
											"attributes": [
												{
													"name": "coupons_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The total sum of all coupons discounted on the invoice. It calculates the cumulative discount amount applied by coupons, expressed in cents."
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date of the invoice creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the invoice object was created"
													}
												},
												{
													"name": "credit_notes_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The total sum of all credit notes discounted on the invoice. It calculates the cumulative discount amount applied by credit notes, expressed in cents."
													}
												},
												{
													"name": "currency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "fees_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The total sum of fees amount in cents. It calculates the cumulative amount of all the fees associated with the invoice, providing a consolidated value."
													}
												},
												{
													"name": "file_url",
													"string": {
														"computed_optional_required": "computed",
														"description": "Contains the URL that provides direct access to the invoice PDF file. You can use this URL to download or view the PDF document of the invoice"
													}
												},
												{
													"name": "invoice_type",
													"string": {
														"computed_optional_required": "computed",
														"description": "The type of invoice issued. Possible values are `subscription`, `one-off`, `credit` or `progressive_billing`."
													}
												},
												{
													"name": "issuing_date",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date when the invoice was issued. It is provided in the ISO 8601 date format."
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee's record within the Lago system."
													}
												},
												{
													"name": "net_payment_term",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized."
													}
												},
												{
													"name": "number",
													"string": {
														"computed_optional_required": "computed",
														"description": "The unique number assigned to the invoice. This number serves as a distinct identifier for the invoice and helps in differentiating it from other invoices in the system."
													}
												},
												{
													"name": "payment_dispute_lost_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date when the payment dispute was lost. It is expressed in Coordinated Universal Time (UTC)."
													}
												},
												{
													"name": "payment_due_date",
													"string": {
														"computed_optional_required": "computed",
														"description": "The payment due date for the invoice, specified in the ISO 8601 date format."
													}
												},
												{
													"name": "payment_overdue",
													"bool": {
														"computed_optional_required": "computed",
														"description": "Specifies if the payment is considered as overdue."
													}
												},
												{
													"name": "payment_status",
													"string": {
														"computed_optional_required": "computed",
														"description": "The status of the payment associated with the invoice. It can have one of the following values:\n- `pending`: the payment is pending, waiting for payment processing in Stripe or when the invoice is emitted but users have not updated the payment status through the endpoint.\n- `succeeded`: the payment of the invoice has been successfully processed.\n- `failed`: the payment of the invoice has failed or encountered an error during processing."
													}
												},
												{
													"name": "prepaid_credit_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The total sum of all prepaid credits discounted on the invoice. It calculates the cumulative discount amount applied by prepaid credits, expressed in cents."
													}
												},
												{
													"name": "progressive_billing_credit_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The usage already billed in previous invoices. Only apply to `progressive_billing` and `subscription` invoices."
													}
												},
												{
													"name": "self_billed",
													"bool": {
														"computed_optional_required": "computed",
														"description": "Indicates if the invoice is self-billed. Self-billing is a process where an organization creates the invoice on behalf of the partner. This field specifies whether the invoice is self-billed or not."
													}
												},
												{
													"name": "sequential_id",
													"int64": {
														"computed_optional_required": "computed",
														"description": "This ID helps in uniquely identifying and organizing the invoices associated with a specific customer. It provides a sequential numbering system specific to the customer, allowing for easy tracking and management of invoices within the customer's context."
													}
												},
												{
													"name": "status",
													"string": {
														"computed_optional_required": "computed",
														"description": "The status of the invoice. It indicates the current state of the invoice and can have following values:\n- `draft`: the invoice is in the draft state, waiting for the end of the grace period to be finalized. During this period, events can still be ingested and added to the invoice.\n- `finalized`: the invoice has been issued and finalized. In this state, events cannot be ingested or added to the invoice anymore.\n- `voided`: the invoice has been issued and subsequently voided. In this state, events cannot be ingested or added to the invoice anymore.\n- `pending`: the invoice remains pending until the taxes are fetched from the external provider.\n- `failed`: during an attempt of finalization of the invoice, an error happened. This invoice will have an array of error_details, explaining, in which part of the system an error happened and how it's possible to fix it. This invoice can't be edited or updated, only retried. This action will discard current error_details and will create new ones if the finalization failed again."
													}
												},
												{
													"name": "sub_total_excluding_taxes_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "Subtotal amount, excluding taxes, expressed in cents.\nThis field depends on the version number. Here are the definitions based on the version:\n- Version 1: is equal to the sum of `fees_amount_cents`, minus `coupons_amount_cents`, and minus `prepaid_credit_amount_cents`.\n- Version 2: is equal to the `fees_amount_cents`.\n- Version 3 \u0026 4: is equal to the `fees_amount_cents`, minus `coupons_amount_cents`"
													}
												},
												{
													"name": "sub_total_including_taxes_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "Subtotal amount, including taxes, expressed in cents.\nThis field depends on the version number. Here are the definitions based on the version:\n- Version 1: is equal to the `total_amount_cents`.\n- Version 2: is equal to the sum of `fees_amount_cents` and `taxes_amount_cents`.\n- Version 3 \u0026 4: is equal to the sum `sub_total_excluding_taxes_amount_cents` and `taxes_amount_cents`"
													}
												},
												{
													"name": "taxes_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The sum of tax amount associated with the invoice, expressed in cents."
													}
												},
												{
													"name": "total_amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The sum of the amount and taxes amount on the invoice, expressed in cents. It calculates the total financial value of the invoice, including both the original amount and any applicable taxes."
													}
												},
												{
													"name": "updated_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date of the invoice update, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The update_date provides a standardized and internationally recognized timestamp for when the invoice object was updated"
													}
												},
												{
													"name": "version_number",
													"int64": {
														"computed_optional_required": "computed"
													}
												}
											]
										}
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the payment request, created by Lago."
									}
								},
								{
									"name": "payment_status",
									"string": {
										"computed_optional_required": "computed",
										"description": "The status of the payment associated with the payment request. It can have one of the following values:\n- `pending`: the payment is pending, waiting for payment processing in the payment provider or when the invoice is emitted but users have not updated the payment status through the endpoint.\n- `succeeded`: the payment of the payment request has been successfully processed.\n- `failed`: the payment of the payment request has failed or encountered an error during processing."
									}
								}
							]
						}
					},
					{
						"name": "meta",
						"single_nested": {
							"computed_optional_required": "computed",
							"attributes": [
								{
									"name": "current_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Current page."
									}
								},
								{
									"name": "next_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Next page."
									}
								},
								{
									"name": "prev_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Previous page."
									}
								},
								{
									"name": "total_count",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Total number of records."
									}
								},
								{
									"name": "total_pages",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Total number of pages."
									}
								}
							]
						}
					},
					{
						"name": "payment_requests",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "amount_cents",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The sum of the total amounts of all the invoices included in the payment request, expressed in cents."
										}
									},
									{
										"name": "amount_currency",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date and time when the payment request was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the payment request was initially created."
										}
									},
									{
										"name": "customer",
										"single_nested": {
											"computed_optional_required": "computed",
											"attributes": [
												{
													"name": "account_type",
													"string": {
														"computed_optional_required": "computed",
														"description": "The type of the account. It can have one of the following values:\n- `customer`: the account is a customer.\n- `partner`: the account is a partner."
													}
												},
												{
													"name": "address_line1",
													"string": {
														"computed_optional_required": "computed",
														"description": "The first line of the billing address"
													}
												},
												{
													"name": "address_line2",
													"string": {
														"computed_optional_required": "computed",
														"description": "The second line of the billing address"
													}
												},
												{
													"name": "applicable_timezone",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "billing_configuration",
													"single_nested": {
														"computed_optional_required": "computed",
														"attributes": [
															{
																"name": "document_locale",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The document locale, specified in the ISO 639-1 format. This field represents the language or locale used for the documents issued by Lago"
																}
															},
															{
																"name": "invoice_grace_period",
																"int64": {
																	"computed_optional_required": "computed",
																	"description": "The grace period, expressed in days, for the invoice. This period refers to the additional time granted to the customer beyond the invoice due date to adjust usage and line items"
																}
															},
															{
																"name": "payment_provider",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The payment provider utilized to initiate payments for invoices issued by Lago.\nAccepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`."
																}
															},
															{
																"name": "payment_provider_code",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique code used to identify a payment provider connection."
																}
															},
															{
																"name": "provider_customer_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The customer ID within the payment provider's system. If this field is not provided, Lago has the option to create a new customer record within the payment provider's system on behalf of the customer"
																}
															},
															{
																"name": "provider_payment_methods",
																"list": {
																	"computed_optional_required": "computed",
																	"element_type": {
																		"string": {}
																	},
																	"description": "Specifies the available payment methods that can be used for this customer when `payment_provider` is set to `stripe`. The `provider_payment_methods` field is an array that allows multiple payment options to be defined. If this field is not explicitly set, the payment methods will be set to `card`. For now, possible values are `card`, `sepa_debit`, `us_bank_account`, `bacs_debit`, `boleto`, `link`, `crypto` and `customer_balance`. Note that when `link` is selected, `card` should also be provided in the array. When `customer_balance` is selected, no other payment can be selected."
																}
															},
															{
																"name": "sync",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Set this field to `true` if you want to create the customer in the payment provider synchronously with the customer creation process in Lago. This option is applicable only when the `provider_customer_id` is `null` and the customer is automatically created in the payment provider through Lago. By default, the value is set to `false`"
																}
															},
															{
																"name": "sync_with_provider",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Set this field to `true` if you want to create a customer record in the payment provider's system. This option is applicable only when the `provider_customer_id` is null and the `sync_with_provider` field is set to `true`. By default, the value is set to `false`"
																}
															}
														],
														"description": "Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer."
													}
												},
												{
													"name": "city",
													"string": {
														"computed_optional_required": "computed",
														"description": "The city of the customer's billing address"
													}
												},
												{
													"name": "country",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date of the customer creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the customer object was created"
													}
												},
												{
													"name": "currency",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "customer_type",
													"string": {
														"computed_optional_required": "computed",
														"description": "The type of the customer. It can have one of the following values:\n- `company`: the customer is a company.\n- `individual`: the customer is an individual."
													}
												},
												{
													"name": "email",
													"string": {
														"computed_optional_required": "computed",
														"description": "The email of the customer"
													}
												},
												{
													"name": "external_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "The customer external unique identifier (provided by your own application)"
													}
												},
												{
													"name": "finalize_zero_amount_invoice",
													"string": {
														"computed_optional_required": "computed",
														"description": "Specifies how invoices with a zero total amount should be handled:\n- `inherit`: (Default) Follows the organization-level configuration.\n- `finalize`: Invoices are issued and finalized even if the total amount is zero.\n- `skip`: Invoices with a total amount of zero are not finalized."
													}
												},
												{
													"name": "firstname",
													"string": {
														"computed_optional_required": "computed",
														"description": "First name of the customer"
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier assigned to the customer within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the customer's record within the Lago system"
													}
												},
												{
													"name": "lastname",
													"string": {
														"computed_optional_required": "computed",
														"description": "Last name of the customer"
													}
												},
												{
													"name": "legal_name",
													"string": {
														"computed_optional_required": "computed",
														"description": "The legal company name of the customer"
													}
												},
												{
													"name": "legal_number",
													"string": {
														"computed_optional_required": "computed",
														"description": "The legal company number of the customer"
													}
												},
												{
													"name": "logo_url",
													"string": {
														"computed_optional_required": "computed",
														"description": "The logo URL of the customer"
													}
												},
												{
													"name": "metadata",
													"list_nested": {
														"computed_optional_required": "computed",
														"nested_object": {
															"attributes": [
																{
																	"name": "created_at",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "The date of the metadata object creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the metadata object was created"
																	}
																},
																{
																	"name": "display_in_invoice",
																	"bool": {
																		"computed_optional_required": "computed",
																		"description": "Determines whether the item or information should be displayed in the invoice. If set to true, the item or information will be included and visible in the generated invoice. If set to false, the item or information will be excluded and not displayed in the invoice."
																	}
																},
																{
																	"name": "key",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "The metadata object key"
																	}
																},
																{
																	"name": "lago_id",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "A unique identifier for the customer metadata object in the Lago application. Can be used to update a key-value pair"
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "The metadata object value"
																	}
																}
															]
														}
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed",
														"description": "The full name of the customer"
													}
												},
												{
													"name": "net_payment_term",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized."
													}
												},
												{
													"name": "phone",
													"string": {
														"computed_optional_required": "computed",
														"description": "The phone number of the customer"
													}
												},
												{
													"name": "sequential_id",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The unique identifier assigned to the customer within the organization's scope. This identifier is used to track and reference the customer's order of creation within the organization's system. It ensures that each customer has a distinct `sequential_id`` associated with them, allowing for easy identification and sorting based on the order of creation"
													}
												},
												{
													"name": "shipping_address",
													"single_nested": {
														"computed_optional_required": "computed",
														"attributes": [
															{
																"name": "address_line1",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The first line of the billing address"
																}
															},
															{
																"name": "address_line2",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The second line of the billing address"
																}
															},
															{
																"name": "city",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The city of the customer's billing address"
																}
															},
															{
																"name": "country",
																"string": {
																	"computed_optional_required": "computed"
																}
															},
															{
																"name": "state",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The state of the customer's billing address"
																}
															},
															{
																"name": "zipcode",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "The zipcode of the customer's billing address"
																}
															}
														],
														"description": "Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer."
													}
												},
												{
													"name": "skip_invoice_custom_sections",
													"bool": {
														"computed_optional_required": "computed",
														"description": "Set to true to exclude all invoice custom sections from PDF generation for this customer only."
													}
												},
												{
													"name": "slug",
													"string": {
														"computed_optional_required": "computed",
														"description": "A concise and unique identifier for the customer, formed by combining the Organization's `name`, `id`, and customer's `sequential_id`"
													}
												},
												{
													"name": "state",
													"string": {
														"computed_optional_required": "computed",
														"description": "The state of the customer's billing address"
													}
												},
												{
													"name": "tax_identification_number",
													"string": {
														"computed_optional_required": "computed",
														"description": "The tax identification number of the customer"
													}
												},
												{
													"name": "timezone",
													"string": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "updated_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date of the customer update, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The update_date provides a standardized and internationally recognized timestamp for when the customer object was updated"
													}
												},
												{
													"name": "url",
													"string": {
														"computed_optional_required": "computed",
														"description": "The custom website URL of the customer"
													}
												},
												{
													"name": "zipcode",
													"string": {
														"computed_optional_required": "computed",
														"description": "The zipcode of the customer's billing address"
													}
												}
											]
										}
									},
									{
										"name": "email",
										"string": {
											"computed_optional_required": "computed",
											"description": "The customer's email address used for sending dunning notifications"
										}
									},
									{
										"name": "invoices",
										"list_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "coupons_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The total sum of all coupons discounted on the invoice. It calculates the cumulative discount amount applied by coupons, expressed in cents."
														}
													},
													{
														"name": "created_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date of the invoice creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the invoice object was created"
														}
													},
													{
														"name": "credit_notes_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The total sum of all credit notes discounted on the invoice. It calculates the cumulative discount amount applied by credit notes, expressed in cents."
														}
													},
													{
														"name": "currency",
														"string": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "fees_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The total sum of fees amount in cents. It calculates the cumulative amount of all the fees associated with the invoice, providing a consolidated value."
														}
													},
													{
														"name": "file_url",
														"string": {
															"computed_optional_required": "computed",
															"description": "Contains the URL that provides direct access to the invoice PDF file. You can use this URL to download or view the PDF document of the invoice"
														}
													},
													{
														"name": "invoice_type",
														"string": {
															"computed_optional_required": "computed",
															"description": "The type of invoice issued. Possible values are `subscription`, `one-off`, `credit` or `progressive_billing`."
														}
													},
													{
														"name": "issuing_date",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date when the invoice was issued. It is provided in the ISO 8601 date format."
														}
													},
													{
														"name": "lago_id",
														"string": {
															"computed_optional_required": "computed",
															"description": "Unique identifier assigned to the fee within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the fee's record within the Lago system."
														}
													},
													{
														"name": "net_payment_term",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The net payment term, expressed in days, specifies the duration within which a customer is expected to remit payment after the invoice is finalized."
														}
													},
													{
														"name": "number",
														"string": {
															"computed_optional_required": "computed",
															"description": "The unique number assigned to the invoice. This number serves as a distinct identifier for the invoice and helps in differentiating it from other invoices in the system."
														}
													},
													{
														"name": "payment_dispute_lost_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date when the payment dispute was lost. It is expressed in Coordinated Universal Time (UTC)."
														}
													},
													{
														"name": "payment_due_date",
														"string": {
															"computed_optional_required": "computed",
															"description": "The payment due date for the invoice, specified in the ISO 8601 date format."
														}
													},
													{
														"name": "payment_overdue",
														"bool": {
															"computed_optional_required": "computed",
															"description": "Specifies if the payment is considered as overdue."
														}
													},
													{
														"name": "payment_status",
														"string": {
															"computed_optional_required": "computed",
															"description": "The status of the payment associated with the invoice. It can have one of the following values:\n- `pending`: the payment is pending, waiting for payment processing in Stripe or when the invoice is emitted but users have not updated the payment status through the endpoint.\n- `succeeded`: the payment of the invoice has been successfully processed.\n- `failed`: the payment of the invoice has failed or encountered an error during processing."
														}
													},
													{
														"name": "prepaid_credit_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The total sum of all prepaid credits discounted on the invoice. It calculates the cumulative discount amount applied by prepaid credits, expressed in cents."
														}
													},
													{
														"name": "progressive_billing_credit_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The usage already billed in previous invoices. Only apply to `progressive_billing` and `subscription` invoices."
														}
													},
													{
														"name": "self_billed",
														"bool": {
															"computed_optional_required": "computed",
															"description": "Indicates if the invoice is self-billed. Self-billing is a process where an organization creates the invoice on behalf of the partner. This field specifies whether the invoice is self-billed or not."
														}
													},
													{
														"name": "sequential_id",
														"int64": {
															"computed_optional_required": "computed",
															"description": "This ID helps in uniquely identifying and organizing the invoices associated with a specific customer. It provides a sequential numbering system specific to the customer, allowing for easy tracking and management of invoices within the customer's context."
														}
													},
													{
														"name": "status",
														"string": {
															"computed_optional_required": "computed",
															"description": "The status of the invoice. It indicates the current state of the invoice and can have following values:\n- `draft`: the invoice is in the draft state, waiting for the end of the grace period to be finalized. During this period, events can still be ingested and added to the invoice.\n- `finalized`: the invoice has been issued and finalized. In this state, events cannot be ingested or added to the invoice anymore.\n- `voided`: the invoice has been issued and subsequently voided. In this state, events cannot be ingested or added to the invoice anymore.\n- `pending`: the invoice remains pending until the taxes are fetched from the external provider.\n- `failed`: during an attempt of finalization of the invoice, an error happened. This invoice will have an array of error_details, explaining, in which part of the system an error happened and how it's possible to fix it. This invoice can't be edited or updated, only retried. This action will discard current error_details and will create new ones if the finalization failed again."
														}
													},
													{
														"name": "sub_total_excluding_taxes_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "Subtotal amount, excluding taxes, expressed in cents.\nThis field depends on the version number. Here are the definitions based on the version:\n- Version 1: is equal to the sum of `fees_amount_cents`, minus `coupons_amount_cents`, and minus `prepaid_credit_amount_cents`.\n- Version 2: is equal to the `fees_amount_cents`.\n- Version 3 \u0026 4: is equal to the `fees_amount_cents`, minus `coupons_amount_cents`"
														}
													},
													{
														"name": "sub_total_including_taxes_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "Subtotal amount, including taxes, expressed in cents.\nThis field depends on the version number. Here are the definitions based on the version:\n- Version 1: is equal to the `total_amount_cents`.\n- Version 2: is equal to the sum of `fees_amount_cents` and `taxes_amount_cents`.\n- Version 3 \u0026 4: is equal to the sum `sub_total_excluding_taxes_amount_cents` and `taxes_amount_cents`"
														}
													},
													{
														"name": "taxes_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The sum of tax amount associated with the invoice, expressed in cents."
														}
													},
													{
														"name": "total_amount_cents",
														"int64": {
															"computed_optional_required": "computed",
															"description": "The sum of the amount and taxes amount on the invoice, expressed in cents. It calculates the total financial value of the invoice, including both the original amount and any applicable taxes."
														}
													},
													{
														"name": "updated_at",
														"string": {
															"computed_optional_required": "computed",
															"description": "The date of the invoice update, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The update_date provides a standardized and internationally recognized timestamp for when the invoice object was updated"
														}
													},
													{
														"name": "version_number",
														"int64": {
															"computed_optional_required": "computed"
														}
													}
												]
											}
										}
									},
									{
										"name": "lago_id",
										"string": {
											"computed_optional_required": "computed",
											"description": "Unique identifier of the payment request, created by Lago."
										}
									},
									{
										"name": "payment_status",
										"string": {
											"computed_optional_required": "computed",
											"description": "The status of the payment associated with the payment request. It can have one of the following values:\n- `pending`: the payment is pending, waiting for payment processing in the payment provider or when the invoice is emitted but users have not updated the payment status through the endpoint.\n- `succeeded`: the payment of the payment request has been successfully processed.\n- `failed`: the payment of the payment request has failed or encountered an error during processing."
										}
									}
								]
							}
						}
					},
					{
						"name": "page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Page number."
						}
					},
					{
						"name": "per_page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Number of records per page."
						}
					},
					{
						"name": "external_customer_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the customer in your application."
						}
					}
				]
			}
		},
		{
			"name": "payments",
			"schema": {
				"attributes": [
					{
						"name": "payment",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "required",
										"description": "The payment amount in cents"
									}
								},
								{
									"name": "invoice_id",
									"string": {
										"computed_optional_required": "required",
										"description": "Unique identifier assigned to the invoice"
									}
								},
								{
									"name": "paid_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The date the payment was made"
									}
								},
								{
									"name": "reference",
									"string": {
										"computed_optional_required": "required",
										"description": "Reference for the payment"
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed",
										"description": "The currency of the payment amount."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "Timestamp when the payment was created."
									}
								},
								{
									"name": "external_payment_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "External identifier for the payment (if applicable)."
									}
								},
								{
									"name": "invoice_ids",
									"list": {
										"computed_optional_required": "computed",
										"element_type": {
											"string": {}
										},
										"description": "List of invoice IDs associated with the payment."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "The unique identifier of the payment, created by Lago."
									}
								},
								{
									"name": "payment_status",
									"string": {
										"computed_optional_required": "computed",
										"description": "The current status of the payment."
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed",
										"description": "The type of payment."
									}
								}
							]
						}
					},
					{
						"name": "meta",
						"single_nested": {
							"computed_optional_required": "computed",
							"attributes": [
								{
									"name": "current_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Current page."
									}
								},
								{
									"name": "next_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Next page."
									}
								},
								{
									"name": "prev_page",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Previous page."
									}
								},
								{
									"name": "total_count",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Total number of records."
									}
								},
								{
									"name": "total_pages",
									"int64": {
										"computed_optional_required": "computed",
										"description": "Total number of pages."
									}
								}
							]
						}
					},
					{
						"name": "payments",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "amount_cents",
										"int64": {
											"computed_optional_required": "computed",
											"description": "The amount of the payment in cents."
										}
									},
									{
										"name": "amount_currency",
										"string": {
											"computed_optional_required": "computed",
											"description": "The currency of the payment amount."
										}
									},
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "Timestamp when the payment was created."
										}
									},
									{
										"name": "external_payment_id",
										"string": {
											"computed_optional_required": "computed",
											"description": "External identifier for the payment (if applicable)."
										}
									},
									{
										"name": "invoice_ids",
										"list": {
											"computed_optional_required": "computed",
											"element_type": {
												"string": {}
											},
											"description": "List of invoice IDs associated with the payment."
										}
									},
									{
										"name": "lago_id",
										"string": {
											"computed_optional_required": "computed",
											"description": "The unique identifier of the payment, created by Lago."
										}
									},
									{
										"name": "payment_status",
										"string": {
											"computed_optional_required": "computed",
											"description": "The current status of the payment."
										}
									},
									{
										"name": "reference",
										"string": {
											"computed_optional_required": "computed",
											"description": "Reference for the payment."
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed",
											"description": "The type of payment."
										}
									}
								]
							}
						}
					},
					{
						"name": "page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Page number."
						}
					},
					{
						"name": "per_page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Number of records per page."
						}
					},
					{
						"name": "external_customer_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the customer in your application."
						}
					},
					{
						"name": "lago_invoice_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the invoice within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the invoice's record within the Lago system."
						}
					}
				]
			}
		},
		{
			"name": "plans",
			"schema": {
				"attributes": [
					{
						"name": "plan",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "amount_cents",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "The base cost of the plan, excluding any applicable taxes, that is billed on a recurring basis. This value is defined at 0 if your plan is a pay-as-you-go plan."
									}
								},
								{
									"name": "amount_currency",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bill_charges_monthly",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "This field, when set to `true`, enables to invoice usage-based charges on monthly basis, even if the cadence of the plan is yearly. This allows customers to pay charges overage on a monthly basis. This can be set to true only if the plan's interval is `yearly`."
									}
								},
								{
									"name": "charges",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "billable_metric_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Unique identifier of the billable metric created by Lago."
													}
												},
												{
													"name": "charge_model",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Specifies the pricing model used for the calculation of the final fee. It can be `standard`, `graduated`, `graduated_percentage` `package`, `percentage`, `volume` or `dynamic`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"standard\",\n\"graduated\",\n\"graduated_percentage\",\n\"package\",\n\"percentage\",\n\"volume\",\n\"dynamic\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "filters",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "invoice_display_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the values of the filter will be used as the default display name."
																	}
																},
																{
																	"name": "properties",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "amount",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "- The unit price, excluding tax, for a `standard` charge model. It is expressed as a decimal value.\n- The amount, excluding tax, for a complete set of units in a `package` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "fixed_amount",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "The fixed fee that is applied to each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "free_units",
																				"int64": {
																					"computed_optional_required": "computed_optional",
																					"description": "The quantity of units that are provided free of charge for each billing period in a `package` charge model. This field specifies the number of units that customers can use without incurring any additional cost during each billing cycle."
																				}
																			},
																			{
																				"name": "free_units_per_events",
																				"int64": {
																					"computed_optional_required": "computed_optional",
																					"description": "The count of transactions that are not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the number of transactions that are exempt from the calculation of charges based on the specified percentage rate and fixed fee."
																				}
																			},
																			{
																				"name": "free_units_per_total_aggregation",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "The transaction amount that is not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the portion of the transaction amount that is exempt from the calculation of charges based on the specified percentage rate and fixed fee.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "graduated_percentage_ranges",
																				"list_nested": {
																					"computed_optional_required": "computed_optional",
																					"nested_object": {
																						"attributes": [
																							{
																								"name": "flat_amount",
																								"string": {
																									"computed_optional_required": "required",
																									"description": "The flat amount for a whole tier, excluding tax, for a `graduated_percentage` charge model. It is expressed as a decimal value."
																								}
																							},
																							{
																								"name": "from_value",
																								"int64": {
																									"computed_optional_required": "required",
																									"description": "Specifies the lower value of a tier for a `graduated_percentage` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																								}
																							},
																							{
																								"name": "rate",
																								"string": {
																									"computed_optional_required": "required",
																									"description": "The percentage rate that is applied to the amount of each transaction in the tier for a `graduated_percentage` charge model. It is expressed as a decimal value."
																								}
																							},
																							{
																								"name": "to_value",
																								"int64": {
																									"computed_optional_required": "required",
																									"description": "Specifies the highest value of a tier for a `graduated_percentage` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																								}
																							}
																						]
																					},
																					"description": "Graduated percentage ranges, sorted from bottom to top tiers, used for a `graduated_percentage` charge model."
																				}
																			},
																			{
																				"name": "graduated_ranges",
																				"list_nested": {
																					"computed_optional_required": "computed_optional",
																					"nested_object": {
																						"attributes": [
																							{
																								"name": "flat_amount",
																								"string": {
																									"computed_optional_required": "required",
																									"description": "The flat amount for a whole tier, excluding tax, for a `graduated` charge model. It is expressed as a decimal value.",
																									"validators": [
																										{
																											"custom": {
																												"imports": [
																													{
																														"path": "regexp"
																													},
																													{
																														"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																													}
																												],
																												"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																											}
																										}
																									]
																								}
																							},
																							{
																								"name": "from_value",
																								"int64": {
																									"computed_optional_required": "required",
																									"description": "Specifies the lower value of a tier for a `graduated` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																								}
																							},
																							{
																								"name": "per_unit_amount",
																								"string": {
																									"computed_optional_required": "required",
																									"description": "The unit price, excluding tax, for a specific tier of a `graduated` charge model. It is expressed as a decimal value.",
																									"validators": [
																										{
																											"custom": {
																												"imports": [
																													{
																														"path": "regexp"
																													},
																													{
																														"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																													}
																												],
																												"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																											}
																										}
																									]
																								}
																							},
																							{
																								"name": "to_value",
																								"int64": {
																									"computed_optional_required": "required",
																									"description": "Specifies the highest value of a tier for a `graduated` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																								}
																							}
																						]
																					},
																					"description": "Graduated ranges, sorted from bottom to top tiers, used for a `graduated` charge model."
																				}
																			},
																			{
																				"name": "grouped_by",
																				"list": {
																					"computed_optional_required": "computed_optional",
																					"element_type": {
																						"string": {}
																					},
																					"description": "The list of event properties that are used to group the events on the invoice for a `standard` charge model."
																				}
																			},
																			{
																				"name": "package_size",
																				"int64": {
																					"computed_optional_required": "computed_optional",
																					"description": "The quantity of units included in each pack or set for a `package` charge model. It indicates the number of units that are bundled together as a single package or set within the pricing structure."
																				}
																			},
																			{
																				"name": "per_transaction_max_amount",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "Specifies the maximum allowable spending for a single transaction. Working as a transaction cap."
																				}
																			},
																			{
																				"name": "per_transaction_min_amount",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "Specifies the minimum allowable spending for a single transaction. Working as a transaction floor."
																				}
																			},
																			{
																				"name": "rate",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "The percentage rate that is applied to the amount of each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "volume_ranges",
																				"list_nested": {
																					"computed_optional_required": "computed_optional",
																					"nested_object": {
																						"attributes": [
																							{
																								"name": "flat_amount",
																								"string": {
																									"computed_optional_required": "required",
																									"description": "The unit price, excluding tax, for a specific tier of a `volume` charge model. It is expressed as a decimal value.",
																									"validators": [
																										{
																											"custom": {
																												"imports": [
																													{
																														"path": "regexp"
																													},
																													{
																														"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																													}
																												],
																												"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																											}
																										}
																									]
																								}
																							},
																							{
																								"name": "from_value",
																								"int64": {
																									"computed_optional_required": "required",
																									"description": "Specifies the lower value of a tier for a `volume` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																								}
																							},
																							{
																								"name": "per_unit_amount",
																								"string": {
																									"computed_optional_required": "required",
																									"description": "The flat amount for a whole tier, excluding tax, for a `volume` charge model. It is expressed as a decimal value.",
																									"validators": [
																										{
																											"custom": {
																												"imports": [
																													{
																														"path": "regexp"
																													},
																													{
																														"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																													}
																												],
																												"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																											}
																										}
																									]
																								}
																							},
																							{
																								"name": "to_value",
																								"int64": {
																									"computed_optional_required": "required",
																									"description": "Specifies the highest value of a tier for a `volume` charge model.\n- This value must be higher than the `from_value` of the same tier.\n- This value must be `null` for the last tier."
																								}
																							}
																						]
																					},
																					"description": "Volume ranges, sorted from bottom to top tiers, used for a `volume` charge model."
																				}
																			}
																		]
																	}
																},
																{
																	"name": "values",
																	"map": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"list": {
																				"element_type": {
																					"string": {}
																				}
																			}
																		},
																		"description": "List of possible filter values. The key and values must match one of the billable metric filters."
																	}
																}
															]
														},
														"description": "List of filters used to apply differentiated pricing based on additional event properties."
													}
												},
												{
													"name": "invoice_display_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
													}
												},
												{
													"name": "invoiceable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "This field specifies whether the charge should be included in a proper invoice. If set to false, no invoice will be issued for this charge. You can only set it to `false` when `pay_in_advance` is `true`."
													}
												},
												{
													"name": "min_amount_cents",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "The minimum spending amount required for the charge, measured in cents and excluding any applicable taxes. It indicates the minimum amount that needs to be charged for each billing period."
													}
												},
												{
													"name": "pay_in_advance",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "This field determines the billing timing for this specific usage-based charge. When set to `true`, the charge is due and invoiced immediately. Conversely, when set to false, the charge is due and invoiced at the end of each billing period."
													}
												},
												{
													"name": "properties",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "amount",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "- The unit price, excluding tax, for a `standard` charge model. It is expressed as a decimal value.\n- The amount, excluding tax, for a complete set of units in a `package` charge model. It is expressed as a decimal value.",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "regexp"
																					},
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																			}
																		}
																	]
																}
															},
															{
																"name": "fixed_amount",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "The fixed fee that is applied to each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "regexp"
																					},
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																			}
																		}
																	]
																}
															},
															{
																"name": "free_units",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "The quantity of units that are provided free of charge for each billing period in a `package` charge model. This field specifies the number of units that customers can use without incurring any additional cost during each billing cycle."
																}
															},
															{
																"name": "free_units_per_events",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "The count of transactions that are not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the number of transactions that are exempt from the calculation of charges based on the specified percentage rate and fixed fee."
																}
															},
															{
																"name": "free_units_per_total_aggregation",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "The transaction amount that is not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the portion of the transaction amount that is exempt from the calculation of charges based on the specified percentage rate and fixed fee.",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "regexp"
																					},
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																			}
																		}
																	]
																}
															},
															{
																"name": "graduated_percentage_ranges",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "flat_amount",
																				"string": {
																					"computed_optional_required": "required",
																					"description": "The flat amount for a whole tier, excluding tax, for a `graduated_percentage` charge model. It is expressed as a decimal value."
																				}
																			},
																			{
																				"name": "from_value",
																				"int64": {
																					"computed_optional_required": "required",
																					"description": "Specifies the lower value of a tier for a `graduated_percentage` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																				}
																			},
																			{
																				"name": "rate",
																				"string": {
																					"computed_optional_required": "required",
																					"description": "The percentage rate that is applied to the amount of each transaction in the tier for a `graduated_percentage` charge model. It is expressed as a decimal value."
																				}
																			},
																			{
																				"name": "to_value",
																				"int64": {
																					"computed_optional_required": "required",
																					"description": "Specifies the highest value of a tier for a `graduated_percentage` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																				}
																			}
																		]
																	},
																	"description": "Graduated percentage ranges, sorted from bottom to top tiers, used for a `graduated_percentage` charge model."
																}
															},
															{
																"name": "graduated_ranges",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "flat_amount",
																				"string": {
																					"computed_optional_required": "required",
																					"description": "The flat amount for a whole tier, excluding tax, for a `graduated` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "from_value",
																				"int64": {
																					"computed_optional_required": "required",
																					"description": "Specifies the lower value of a tier for a `graduated` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																				}
																			},
																			{
																				"name": "per_unit_amount",
																				"string": {
																					"computed_optional_required": "required",
																					"description": "The unit price, excluding tax, for a specific tier of a `graduated` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "to_value",
																				"int64": {
																					"computed_optional_required": "required",
																					"description": "Specifies the highest value of a tier for a `graduated` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																				}
																			}
																		]
																	},
																	"description": "Graduated ranges, sorted from bottom to top tiers, used for a `graduated` charge model."
																}
															},
															{
																"name": "grouped_by",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "The list of event properties that are used to group the events on the invoice for a `standard` charge model."
																}
															},
															{
																"name": "package_size",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "The quantity of units included in each pack or set for a `package` charge model. It indicates the number of units that are bundled together as a single package or set within the pricing structure."
																}
															},
															{
																"name": "per_transaction_max_amount",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "Specifies the maximum allowable spending for a single transaction. Working as a transaction cap."
																}
															},
															{
																"name": "per_transaction_min_amount",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "Specifies the minimum allowable spending for a single transaction. Working as a transaction floor."
																}
															},
															{
																"name": "rate",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "The percentage rate that is applied to the amount of each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "regexp"
																					},
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																			}
																		}
																	]
																}
															},
															{
																"name": "volume_ranges",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "flat_amount",
																				"string": {
																					"computed_optional_required": "required",
																					"description": "The unit price, excluding tax, for a specific tier of a `volume` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "from_value",
																				"int64": {
																					"computed_optional_required": "required",
																					"description": "Specifies the lower value of a tier for a `volume` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																				}
																			},
																			{
																				"name": "per_unit_amount",
																				"string": {
																					"computed_optional_required": "required",
																					"description": "The flat amount for a whole tier, excluding tax, for a `volume` charge model. It is expressed as a decimal value.",
																					"validators": [
																						{
																							"custom": {
																								"imports": [
																									{
																										"path": "regexp"
																									},
																									{
																										"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																									}
																								],
																								"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "to_value",
																				"int64": {
																					"computed_optional_required": "required",
																					"description": "Specifies the highest value of a tier for a `volume` charge model.\n- This value must be higher than the `from_value` of the same tier.\n- This value must be `null` for the last tier."
																				}
																			}
																		]
																	},
																	"description": "Volume ranges, sorted from bottom to top tiers, used for a `volume` charge model."
																}
															}
														]
													}
												},
												{
													"name": "prorated",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "Specifies whether a charge is prorated based on the remaining number of days in the billing period or billed fully.\n\n- If set to `true`, the charge is prorated based on the remaining days in the current billing period.\n- If set to `false`, the charge is billed in full.\n- If not defined in the request, default value is `false`."
													}
												},
												{
													"name": "regroup_paid_fees",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "This setting can only be configured if `pay_in_advance` is `true` and `invoiceable` is `false`.\nThis field determines whether and when the charge fee should be included in\nthe invoice. If `null`, no invoice will be issued for this charge fee.\nIf `invoice`, an invoice will be generated at the end of the period,\nconsolidating all charge fees with a succeeded payment status.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"invoice\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "tax_codes",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "List of unique code used to identify the taxes."
													}
												},
												{
													"name": "billable_metric_code",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique code identifying a billable metric."
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date and time when the charge was created. It is expressed in UTC format according to the ISO 8601 datetime standard."
													}
												},
												{
													"name": "lago_billable_metric_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the billable metric created by Lago."
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of charge, created by Lago."
													}
												},
												{
													"name": "taxes",
													"list_nested": {
														"computed_optional_required": "computed",
														"nested_object": {
															"attributes": [
																{
																	"name": "applied_to_organization",
																	"bool": {
																		"computed_optional_required": "computed",
																		"description": "Set to `true` if the tax is used as one of the organization's default"
																	}
																},
																{
																	"name": "code",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "Unique code used to identify the tax associated with the API request."
																	}
																},
																{
																	"name": "created_at",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "Creation date of the tax."
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "Internal description of the taxe"
																	}
																},
																{
																	"name": "lago_id",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "Unique identifier of the tax, created by Lago."
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed",
																		"description": "Name of the tax."
																	}
																},
																{
																	"name": "rate",
																	"number": {
																		"computed_optional_required": "computed",
																		"description": "The percentage rate of the tax"
																	}
																}
															]
														},
														"description": "All taxes applied to the charge."
													}
												}
											]
										},
										"description": "Additional usage-based charges for this plan."
									}
								},
								{
									"name": "code",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The code of the plan. It serves as a unique identifier associated with a particular plan. The code is typically used for internal or system-level identification purposes, like assigning a subscription, for instance."
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The description on the plan."
									}
								},
								{
									"name": "interval",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The interval used for recurring billing. It represents the frequency at which subscription billing occurs. The interval can be one of the following values: `yearly`, `quarterly`, `monthly`, or `weekly`.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"weekly\",\n\"monthly\",\n\"quarterly\",\n\"yearly\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "invoice_display_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the plan will be used as the default display name."
									}
								},
								{
									"name": "minimum_commitment",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "amount_cents",
												"int64": {
													"computed_optional_required": "required",
													"description": "The amount of the minimum commitment in cents."
												}
											},
											{
												"name": "invoice_display_name",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the default name will be used as the display name."
												}
											},
											{
												"name": "tax_codes",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "List of unique code used to identify the taxes."
												}
											},
											{
												"name": "created_at",
												"string": {
													"computed_optional_required": "computed",
													"description": "The date and time when the minimum commitment was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the minimum commitment was initially created."
												}
											},
											{
												"name": "interval",
												"string": {
													"computed_optional_required": "computed",
													"description": "The interval used for recurring billing. It represents the frequency at which subscription billing occurs. The interval can be one of the following values: `yearly`, `quarterly`, `monthly` or `weekly`."
												}
											},
											{
												"name": "lago_id",
												"string": {
													"computed_optional_required": "computed",
													"description": "Unique identifier of the minimum commitment, created by Lago."
												}
											},
											{
												"name": "plan_code",
												"string": {
													"computed_optional_required": "computed",
													"description": "The unique code representing the plan to be attached to the customer."
												}
											},
											{
												"name": "taxes",
												"list_nested": {
													"computed_optional_required": "computed",
													"nested_object": {
														"attributes": [
															{
																"name": "applied_to_organization",
																"bool": {
																	"computed_optional_required": "computed",
																	"description": "Set to `true` if the tax is used as one of the organization's default"
																}
															},
															{
																"name": "code",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique code used to identify the tax associated with the API request."
																}
															},
															{
																"name": "created_at",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Creation date of the tax."
																}
															},
															{
																"name": "description",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Internal description of the taxe"
																}
															},
															{
																"name": "lago_id",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Unique identifier of the tax, created by Lago."
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed",
																	"description": "Name of the tax."
																}
															},
															{
																"name": "rate",
																"number": {
																	"computed_optional_required": "computed",
																	"description": "The percentage rate of the tax"
																}
															}
														]
													},
													"description": "All taxes applied to the minimum commitment."
												}
											},
											{
												"name": "updated_at",
												"string": {
													"computed_optional_required": "computed",
													"description": "The date and time when the minimum commitment was updated. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the minimum commitment was initially created."
												}
											}
										],
										"description": "Minimum commitment for this plan."
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The name of the plan."
									}
								},
								{
									"name": "pay_in_advance",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "This field determines the billing timing for the plan. When set to `true`, the base cost of the plan is due at the beginning of each billing period. Conversely, when set to `false`, the base cost of the plan is due at the end of each billing period."
									}
								},
								{
									"name": "tax_codes",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "List of unique code used to identify the taxes."
									}
								},
								{
									"name": "trial_period",
									"number": {
										"computed_optional_required": "computed_optional",
										"description": "The duration in days during which the base cost of the plan is offered for free."
									}
								},
								{
									"name": "usage_thresholds",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "amount_cents",
													"int64": {
														"computed_optional_required": "required",
														"description": "The amount to reach to trigger a `progressive_billing` invoice."
													}
												},
												{
													"name": "id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Unique identifier of the usage threshold created by Lago."
													}
												},
												{
													"name": "recurring",
													"bool": {
														"computed_optional_required": "required",
														"description": "This field when set to `true` indicates that a `progressive_billing` invoice will be created every time the lifetime usage increases by the specified amount."
													}
												},
												{
													"name": "threshold_display_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The display name of the usage threshold."
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date and time when the usage threshold was created. It is expressed in UTC format according to the ISO 8601 datetime standard."
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the usage threshold created by Lago."
													}
												},
												{
													"name": "updated_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date and time when the usage threshold was last updated. It is expressed in UTC format according to the ISO 8601 datetime standard."
													}
												}
											]
										},
										"description": "List of usage thresholds to apply to the plan."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time when the plan was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the plan was initially created."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the plan created by Lago."
									}
								},
								{
									"name": "taxes",
									"list_nested": {
										"computed_optional_required": "computed",
										"nested_object": {
											"attributes": [
												{
													"name": "applied_to_organization",
													"bool": {
														"computed_optional_required": "computed",
														"description": "Set to `true` if the tax is used as one of the organization's default"
													}
												},
												{
													"name": "code",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique code used to identify the tax associated with the API request."
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "Creation date of the tax."
													}
												},
												{
													"name": "description",
													"string": {
														"computed_optional_required": "computed",
														"description": "Internal description of the taxe"
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "Unique identifier of the tax, created by Lago."
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed",
														"description": "Name of the tax."
													}
												},
												{
													"name": "rate",
													"number": {
														"computed_optional_required": "computed",
														"description": "The percentage rate of the tax"
													}
												}
											]
										},
										"description": "All taxes applied to the plan."
									}
								}
							]
						}
					},
					{
						"name": "code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The code of the plan. It serves as a unique identifier associated with a particular plan. The code is typically used for internal or system-level identification purposes, like assigning a subscription, for instance."
						}
					}
				]
			}
		},
		{
			"name": "subscriptions",
			"schema": {
				"attributes": [
					{
						"name": "subscription",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "billing_time",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The billing time for the subscription, which can be set as either `anniversary` or `calendar`. If not explicitly provided, it will default to `calendar`. The billing time determines the timing of recurring billing cycles for the subscription. By specifying `anniversary`, the billing cycle will be based on the specific date the subscription started (billed fully), while `calendar` sets the billing cycle at the first day of the week/month/year (billed with proration).",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"calendar\",\n\"anniversary\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "ending_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The effective end date of the subscription. If this field is set to null, the subscription will automatically renew. This date should be provided in ISO 8601 datetime format, and use Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "external_customer_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The customer external unique identifier (provided by your own application)"
									}
								},
								{
									"name": "external_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The unique external identifier for the subscription. This identifier serves as an idempotency key, ensuring that each subscription is unique."
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The display name of the subscription on an invoice. This field allows for customization of the subscription's name for billing purposes, especially useful when a single customer has multiple subscriptions using the same plan."
									}
								},
								{
									"name": "plan_code",
									"string": {
										"computed_optional_required": "required",
										"description": "The unique code representing the plan to be attached to the customer. This code must correspond to the `code` property of one of the active plans."
									}
								},
								{
									"name": "plan_overrides",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "amount_cents",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "The base cost of the plan, excluding any applicable taxes, that is billed on a recurring basis. This value is defined at 0 if your plan is a pay-as-you-go plan."
												}
											},
											{
												"name": "amount_currency",
												"string": {
													"computed_optional_required": "computed_optional",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "charges",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "billable_metric_id",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "Unique identifier of the billable metric created by Lago."
																}
															},
															{
																"name": "filters",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "invoice_display_name",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the values of the filter will be used as the default display name."
																				}
																			},
																			{
																				"name": "properties",
																				"single_nested": {
																					"computed_optional_required": "computed_optional",
																					"attributes": [
																						{
																							"name": "amount",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "- The unit price, excluding tax, for a `standard` charge model. It is expressed as a decimal value.\n- The amount, excluding tax, for a complete set of units in a `package` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "fixed_amount",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "The fixed fee that is applied to each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "free_units",
																							"int64": {
																								"computed_optional_required": "computed_optional",
																								"description": "The quantity of units that are provided free of charge for each billing period in a `package` charge model. This field specifies the number of units that customers can use without incurring any additional cost during each billing cycle."
																							}
																						},
																						{
																							"name": "free_units_per_events",
																							"int64": {
																								"computed_optional_required": "computed_optional",
																								"description": "The count of transactions that are not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the number of transactions that are exempt from the calculation of charges based on the specified percentage rate and fixed fee."
																							}
																						},
																						{
																							"name": "free_units_per_total_aggregation",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "The transaction amount that is not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the portion of the transaction amount that is exempt from the calculation of charges based on the specified percentage rate and fixed fee.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "graduated_percentage_ranges",
																							"list_nested": {
																								"computed_optional_required": "computed_optional",
																								"nested_object": {
																									"attributes": [
																										{
																											"name": "flat_amount",
																											"string": {
																												"computed_optional_required": "required",
																												"description": "The flat amount for a whole tier, excluding tax, for a `graduated_percentage` charge model. It is expressed as a decimal value."
																											}
																										},
																										{
																											"name": "from_value",
																											"int64": {
																												"computed_optional_required": "required",
																												"description": "Specifies the lower value of a tier for a `graduated_percentage` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																											}
																										},
																										{
																											"name": "rate",
																											"string": {
																												"computed_optional_required": "required",
																												"description": "The percentage rate that is applied to the amount of each transaction in the tier for a `graduated_percentage` charge model. It is expressed as a decimal value."
																											}
																										},
																										{
																											"name": "to_value",
																											"int64": {
																												"computed_optional_required": "required",
																												"description": "Specifies the highest value of a tier for a `graduated_percentage` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																											}
																										}
																									]
																								},
																								"description": "Graduated percentage ranges, sorted from bottom to top tiers, used for a `graduated_percentage` charge model."
																							}
																						},
																						{
																							"name": "graduated_ranges",
																							"list_nested": {
																								"computed_optional_required": "computed_optional",
																								"nested_object": {
																									"attributes": [
																										{
																											"name": "flat_amount",
																											"string": {
																												"computed_optional_required": "required",
																												"description": "The flat amount for a whole tier, excluding tax, for a `graduated` charge model. It is expressed as a decimal value.",
																												"validators": [
																													{
																														"custom": {
																															"imports": [
																																{
																																	"path": "regexp"
																																},
																																{
																																	"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																																}
																															],
																															"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																														}
																													}
																												]
																											}
																										},
																										{
																											"name": "from_value",
																											"int64": {
																												"computed_optional_required": "required",
																												"description": "Specifies the lower value of a tier for a `graduated` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																											}
																										},
																										{
																											"name": "per_unit_amount",
																											"string": {
																												"computed_optional_required": "required",
																												"description": "The unit price, excluding tax, for a specific tier of a `graduated` charge model. It is expressed as a decimal value.",
																												"validators": [
																													{
																														"custom": {
																															"imports": [
																																{
																																	"path": "regexp"
																																},
																																{
																																	"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																																}
																															],
																															"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																														}
																													}
																												]
																											}
																										},
																										{
																											"name": "to_value",
																											"int64": {
																												"computed_optional_required": "required",
																												"description": "Specifies the highest value of a tier for a `graduated` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																											}
																										}
																									]
																								},
																								"description": "Graduated ranges, sorted from bottom to top tiers, used for a `graduated` charge model."
																							}
																						},
																						{
																							"name": "grouped_by",
																							"list": {
																								"computed_optional_required": "computed_optional",
																								"element_type": {
																									"string": {}
																								},
																								"description": "The list of event properties that are used to group the events on the invoice for a `standard` charge model."
																							}
																						},
																						{
																							"name": "package_size",
																							"int64": {
																								"computed_optional_required": "computed_optional",
																								"description": "The quantity of units included in each pack or set for a `package` charge model. It indicates the number of units that are bundled together as a single package or set within the pricing structure."
																							}
																						},
																						{
																							"name": "per_transaction_max_amount",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "Specifies the maximum allowable spending for a single transaction. Working as a transaction cap."
																							}
																						},
																						{
																							"name": "per_transaction_min_amount",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "Specifies the minimum allowable spending for a single transaction. Working as a transaction floor."
																							}
																						},
																						{
																							"name": "rate",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "The percentage rate that is applied to the amount of each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "volume_ranges",
																							"list_nested": {
																								"computed_optional_required": "computed_optional",
																								"nested_object": {
																									"attributes": [
																										{
																											"name": "flat_amount",
																											"string": {
																												"computed_optional_required": "required",
																												"description": "The unit price, excluding tax, for a specific tier of a `volume` charge model. It is expressed as a decimal value.",
																												"validators": [
																													{
																														"custom": {
																															"imports": [
																																{
																																	"path": "regexp"
																																},
																																{
																																	"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																																}
																															],
																															"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																														}
																													}
																												]
																											}
																										},
																										{
																											"name": "from_value",
																											"int64": {
																												"computed_optional_required": "required",
																												"description": "Specifies the lower value of a tier for a `volume` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																											}
																										},
																										{
																											"name": "per_unit_amount",
																											"string": {
																												"computed_optional_required": "required",
																												"description": "The flat amount for a whole tier, excluding tax, for a `volume` charge model. It is expressed as a decimal value.",
																												"validators": [
																													{
																														"custom": {
																															"imports": [
																																{
																																	"path": "regexp"
																																},
																																{
																																	"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																																}
																															],
																															"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																														}
																													}
																												]
																											}
																										},
																										{
																											"name": "to_value",
																											"int64": {
																												"computed_optional_required": "required",
																												"description": "Specifies the highest value of a tier for a `volume` charge model.\n- This value must be higher than the `from_value` of the same tier.\n- This value must be `null` for the last tier."
																											}
																										}
																									]
																								},
																								"description": "Volume ranges, sorted from bottom to top tiers, used for a `volume` charge model."
																							}
																						}
																					]
																				}
																			},
																			{
																				"name": "values",
																				"map": {
																					"computed_optional_required": "computed_optional",
																					"element_type": {
																						"list": {
																							"element_type": {
																								"string": {}
																							}
																						}
																					},
																					"description": "List of possible filter values. The key and values must match one of the billable metric filters."
																				}
																			}
																		]
																	},
																	"description": "List of filters used to apply differentiated pricing based on additional event properties."
																}
															},
															{
																"name": "id",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "Unique identifier of the charge created by Lago."
																}
															},
															{
																"name": "invoice_display_name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name."
																}
															},
															{
																"name": "min_amount_cents",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "The minimum spending amount required for the charge, measured in cents and excluding any applicable taxes. It indicates the minimum amount that needs to be charged for each billing period."
																}
															},
															{
																"name": "properties",
																"single_nested": {
																	"computed_optional_required": "computed_optional",
																	"attributes": [
																		{
																			"name": "amount",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "- The unit price, excluding tax, for a `standard` charge model. It is expressed as a decimal value.\n- The amount, excluding tax, for a complete set of units in a `package` charge model. It is expressed as a decimal value.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "regexp"
																								},
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "fixed_amount",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "The fixed fee that is applied to each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "regexp"
																								},
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "free_units",
																			"int64": {
																				"computed_optional_required": "computed_optional",
																				"description": "The quantity of units that are provided free of charge for each billing period in a `package` charge model. This field specifies the number of units that customers can use without incurring any additional cost during each billing cycle."
																			}
																		},
																		{
																			"name": "free_units_per_events",
																			"int64": {
																				"computed_optional_required": "computed_optional",
																				"description": "The count of transactions that are not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the number of transactions that are exempt from the calculation of charges based on the specified percentage rate and fixed fee."
																			}
																		},
																		{
																			"name": "free_units_per_total_aggregation",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "The transaction amount that is not impacted by the `percentage` rate and fixed fee in a percentage charge model. This field indicates the portion of the transaction amount that is exempt from the calculation of charges based on the specified percentage rate and fixed fee.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "regexp"
																								},
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "graduated_percentage_ranges",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "flat_amount",
																							"string": {
																								"computed_optional_required": "required",
																								"description": "The flat amount for a whole tier, excluding tax, for a `graduated_percentage` charge model. It is expressed as a decimal value."
																							}
																						},
																						{
																							"name": "from_value",
																							"int64": {
																								"computed_optional_required": "required",
																								"description": "Specifies the lower value of a tier for a `graduated_percentage` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																							}
																						},
																						{
																							"name": "rate",
																							"string": {
																								"computed_optional_required": "required",
																								"description": "The percentage rate that is applied to the amount of each transaction in the tier for a `graduated_percentage` charge model. It is expressed as a decimal value."
																							}
																						},
																						{
																							"name": "to_value",
																							"int64": {
																								"computed_optional_required": "required",
																								"description": "Specifies the highest value of a tier for a `graduated_percentage` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																							}
																						}
																					]
																				},
																				"description": "Graduated percentage ranges, sorted from bottom to top tiers, used for a `graduated_percentage` charge model."
																			}
																		},
																		{
																			"name": "graduated_ranges",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "flat_amount",
																							"string": {
																								"computed_optional_required": "required",
																								"description": "The flat amount for a whole tier, excluding tax, for a `graduated` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "from_value",
																							"int64": {
																								"computed_optional_required": "required",
																								"description": "Specifies the lower value of a tier for a `graduated` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																							}
																						},
																						{
																							"name": "per_unit_amount",
																							"string": {
																								"computed_optional_required": "required",
																								"description": "The unit price, excluding tax, for a specific tier of a `graduated` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "to_value",
																							"int64": {
																								"computed_optional_required": "required",
																								"description": "Specifies the highest value of a tier for a `graduated` charge model.\n- This value must be higher than the from_value of the same tier.\n- This value must be null for the last tier."
																							}
																						}
																					]
																				},
																				"description": "Graduated ranges, sorted from bottom to top tiers, used for a `graduated` charge model."
																			}
																		},
																		{
																			"name": "grouped_by",
																			"list": {
																				"computed_optional_required": "computed_optional",
																				"element_type": {
																					"string": {}
																				},
																				"description": "The list of event properties that are used to group the events on the invoice for a `standard` charge model."
																			}
																		},
																		{
																			"name": "package_size",
																			"int64": {
																				"computed_optional_required": "computed_optional",
																				"description": "The quantity of units included in each pack or set for a `package` charge model. It indicates the number of units that are bundled together as a single package or set within the pricing structure."
																			}
																		},
																		{
																			"name": "per_transaction_max_amount",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Specifies the maximum allowable spending for a single transaction. Working as a transaction cap."
																			}
																		},
																		{
																			"name": "per_transaction_min_amount",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Specifies the minimum allowable spending for a single transaction. Working as a transaction floor."
																			}
																		},
																		{
																			"name": "rate",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "The percentage rate that is applied to the amount of each transaction for a `percentage` charge model. It is expressed as a decimal value.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "regexp"
																								},
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "volume_ranges",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "flat_amount",
																							"string": {
																								"computed_optional_required": "required",
																								"description": "The unit price, excluding tax, for a specific tier of a `volume` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "from_value",
																							"int64": {
																								"computed_optional_required": "required",
																								"description": "Specifies the lower value of a tier for a `volume` charge model. It must be either 0 or the previous range's `to_value + 1` to maintain the proper sequence of values."
																							}
																						},
																						{
																							"name": "per_unit_amount",
																							"string": {
																								"computed_optional_required": "required",
																								"description": "The flat amount for a whole tier, excluding tax, for a `volume` charge model. It is expressed as a decimal value.",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "regexp"
																												},
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "to_value",
																							"int64": {
																								"computed_optional_required": "required",
																								"description": "Specifies the highest value of a tier for a `volume` charge model.\n- This value must be higher than the `from_value` of the same tier.\n- This value must be `null` for the last tier."
																							}
																						}
																					]
																				},
																				"description": "Volume ranges, sorted from bottom to top tiers, used for a `volume` charge model."
																			}
																		}
																	]
																}
															},
															{
																"name": "tax_codes",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "List of unique code used to identify the taxes."
																}
															}
														]
													},
													"description": "Additional usage-based charges for this plan."
												}
											},
											{
												"name": "description",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The description on the plan."
												}
											},
											{
												"name": "invoice_display_name",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the plan will be used as the default display name."
												}
											},
											{
												"name": "minimum_commitment",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "amount_cents",
															"int64": {
																"computed_optional_required": "required",
																"description": "The amount of the minimum commitment in cents."
															}
														},
														{
															"name": "created_at",
															"string": {
																"computed_optional_required": "required",
																"description": "The date and time when the minimum commitment was created. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the minimum commitment was initially created."
															}
														},
														{
															"name": "interval",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "The interval used for recurring billing. It represents the frequency at which subscription billing occurs. The interval can be one of the following values: `yearly`, `quarterly`, `monthly` or `weekly`.",
																"validators": [
																	{
																		"custom": {
																			"imports": [
																				{
																					"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																				}
																			],
																			"schema_definition": "stringvalidator.OneOf(\n\"weekly\",\n\"monthly\",\n\"quarterly\",\n\"yearly\",\n)"
																		}
																	}
																]
															}
														},
														{
															"name": "invoice_display_name",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "Specifies the name that will be displayed on an invoice. If no value is set for this field, the default name will be used as the display name."
															}
														},
														{
															"name": "lago_id",
															"string": {
																"computed_optional_required": "required",
																"description": "Unique identifier of the minimum commitment, created by Lago."
															}
														},
														{
															"name": "plan_code",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "The unique code representing the plan to be attached to the customer."
															}
														},
														{
															"name": "taxes",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "applied_to_organization",
																			"bool": {
																				"computed_optional_required": "required",
																				"description": "Set to `true` if the tax is used as one of the organization's default"
																			}
																		},
																		{
																			"name": "code",
																			"string": {
																				"computed_optional_required": "required",
																				"description": "Unique code used to identify the tax associated with the API request."
																			}
																		},
																		{
																			"name": "created_at",
																			"string": {
																				"computed_optional_required": "required",
																				"description": "Creation date of the tax."
																			}
																		},
																		{
																			"name": "description",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Internal description of the taxe"
																			}
																		},
																		{
																			"name": "lago_id",
																			"string": {
																				"computed_optional_required": "required",
																				"description": "Unique identifier of the tax, created by Lago."
																			}
																		},
																		{
																			"name": "name",
																			"string": {
																				"computed_optional_required": "required",
																				"description": "Name of the tax."
																			}
																		},
																		{
																			"name": "rate",
																			"number": {
																				"computed_optional_required": "required",
																				"description": "The percentage rate of the tax"
																			}
																		}
																	]
																},
																"description": "All taxes applied to the minimum commitment."
															}
														},
														{
															"name": "updated_at",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "The date and time when the minimum commitment was updated. It is expressed in UTC format according to the ISO 8601 datetime standard. This field provides the timestamp for the exact moment when the minimum commitment was initially created."
															}
														}
													]
												}
											},
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "The name of the plan."
												}
											},
											{
												"name": "tax_codes",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "List of unique code used to identify the taxes."
												}
											},
											{
												"name": "trial_period",
												"number": {
													"computed_optional_required": "computed_optional",
													"description": "The duration in days during which the base cost of the plan is offered for free."
												}
											},
											{
												"name": "usage_thresholds",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "amount_cents",
																"int64": {
																	"computed_optional_required": "required",
																	"description": "The amount to reach to trigger a `progressive_billing` invoice."
																}
															},
															{
																"name": "created_at",
																"string": {
																	"computed_optional_required": "required",
																	"description": "The date and time when the usage threshold was created. It is expressed in UTC format according to the ISO 8601 datetime standard."
																}
															},
															{
																"name": "lago_id",
																"string": {
																	"computed_optional_required": "required",
																	"description": "Unique identifier of the usage threshold created by Lago."
																}
															},
															{
																"name": "recurring",
																"bool": {
																	"computed_optional_required": "required",
																	"description": "This field when set to `true` indicates that a `progressive_billing` invoice will be created every time the lifetime usage increases by the specified amount."
																}
															},
															{
																"name": "threshold_display_name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "The display name of the usage threshold."
																}
															},
															{
																"name": "updated_at",
																"string": {
																	"computed_optional_required": "required",
																	"description": "The date and time when the usage threshold was last updated. It is expressed in UTC format according to the ISO 8601 datetime standard."
																}
															}
														]
													},
													"description": "List of usage thresholds applied to the subscription."
												}
											}
										],
										"description": "Based plan overrides."
									}
								},
								{
									"name": "subscription_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The start date for the subscription, allowing for the creation of subscriptions that can begin in the past or future. Please note that it cannot be used to update the start date of a pending subscription or schedule an upgrade/downgrade. The start_date should be provided in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
									}
								}
							]
						}
					},
					{
						"name": "lifetime_usage",
						"single_nested": {
							"computed_optional_required": "computed",
							"attributes": [
								{
									"name": "current_usage_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The current usage amount in cents for the subscription on the current billing period."
									}
								},
								{
									"name": "external_historical_usage_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The historical usage amount in cents for the subscription (provided by your own application)."
									}
								},
								{
									"name": "external_subscription_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "The subscription external unique identifier (provided by your own application)."
									}
								},
								{
									"name": "from_datetime",
									"string": {
										"computed_optional_required": "computed",
										"description": "The recording start date and time of the subscription lifetime usage. The date and time must be in ISO 8601 format."
									}
								},
								{
									"name": "invoiced_usage_amount_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The total invoiced usage amount in cents for the subscription."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the lifetime usage record within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the lifetime usage record within the Lago system"
									}
								},
								{
									"name": "lago_subscription_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the subscription record within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the subscription record within the Lago system"
									}
								},
								{
									"name": "to_datetime",
									"string": {
										"computed_optional_required": "computed",
										"description": "The recording end date and time of the subscription lifetime usage. The date and time must be in ISO 8601 format."
									}
								},
								{
									"name": "usage_thresholds",
									"list_nested": {
										"computed_optional_required": "computed",
										"nested_object": {
											"attributes": [
												{
													"name": "amount_cents",
													"int64": {
														"computed_optional_required": "computed",
														"description": "The usage threshold amount in cents."
													}
												},
												{
													"name": "completion_ratio",
													"number": {
														"computed_optional_required": "computed",
														"description": "The completion ratio of the usage threshold."
													}
												},
												{
													"name": "reached_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date and time when the usage threshold was reached. The date and time must be in ISO 8601 format."
													}
												}
											]
										},
										"description": "Array of usage thresholds attached to the subscription's plan."
									}
								}
							]
						}
					},
					{
						"name": "external_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "External ID of the existing subscription"
						}
					}
				]
			}
		},
		{
			"name": "taxes",
			"schema": {
				"attributes": [
					{
						"name": "tax",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "applied_to_organization",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Set to `true` if the tax is used as one of the organization's default"
									}
								},
								{
									"name": "code",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Unique code used to identify the tax associated with the API request."
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Internal description of the taxe"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "Name of the tax."
									}
								},
								{
									"name": "rate",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The percentage rate of the tax",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "Creation date of the tax."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier of the tax, created by Lago."
									}
								}
							]
						}
					},
					{
						"name": "code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The code of the tax. It serves as a unique identifier associated with a particular tax. The code is typically used for internal or system-level identification purposes."
						}
					}
				]
			}
		},
		{
			"name": "wallet_transactions",
			"schema": {
				"attributes": [
					{
						"name": "wallet_transaction",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "granted_credits",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The number of free granted credits.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "invoice_requires_successful_payment",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "A boolean setting that, when set to true, delays issuing an invoice for a wallet top-up until a successful payment is made; if false, the invoice is issued immediately upon wallet top-up, regardless of the payment status. Default value of false."
									}
								},
								{
									"name": "metadata",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "key",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The unique identifier for the attribute."
													}
												},
												{
													"name": "value",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The value associated with the key."
													}
												}
											]
										},
										"description": "This optional field allows you to store a list of key-value pairs that hold additional information or custom attributes related to the data."
									}
								},
								{
									"name": "paid_credits",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The number of paid credits.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "voided_credits",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The number of voided credits.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "wallet_id",
									"string": {
										"computed_optional_required": "required",
										"description": "Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet's record within the Lago system."
									}
								}
							]
						}
					},
					{
						"name": "wallet_transactions",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "amount",
										"string": {
											"computed_optional_required": "computed",
											"description": "The amount of credits based on the rate and the currency."
										}
									},
									{
										"name": "created_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date of the wallet transaction creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
										}
									},
									{
										"name": "credit_amount",
										"string": {
											"computed_optional_required": "computed",
											"description": "The number of credits used in the wallet transaction."
										}
									},
									{
										"name": "invoice_requires_successful_payment",
										"bool": {
											"computed_optional_required": "computed",
											"description": "A boolean setting that, when set to true, delays issuing an invoice for a wallet top-up until a successful payment is made; if false, the invoice is issued immediately upon wallet top-up, regardless of the payment status. Default value of false."
										}
									},
									{
										"name": "lago_id",
										"string": {
											"computed_optional_required": "computed",
											"description": "Unique identifier assigned to the wallet transaction within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet transaction's record within the Lago system."
										}
									},
									{
										"name": "lago_wallet_id",
										"string": {
											"computed_optional_required": "computed",
											"description": "Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet's record within the Lago system."
										}
									},
									{
										"name": "metadata",
										"list_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "key",
														"string": {
															"computed_optional_required": "computed",
															"description": "The unique identifier for the attribute."
														}
													},
													{
														"name": "value",
														"string": {
															"computed_optional_required": "computed",
															"description": "The value associated with the key."
														}
													}
												]
											},
											"description": "This field allows you to store a list of key-value pairs that hold additional information or custom attributes related to the data."
										}
									},
									{
										"name": "settled_at",
										"string": {
											"computed_optional_required": "computed",
											"description": "The date when wallet transaction is settled, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
										}
									},
									{
										"name": "source",
										"string": {
											"computed_optional_required": "computed",
											"description": "The source field represents the origin or trigger of the wallet transaction. Possible values are `manual`, `interval`. `threshold`"
										}
									},
									{
										"name": "status",
										"string": {
											"computed_optional_required": "computed",
											"description": "The status of the wallet transaction. Possible values are `pending` or `settled`."
										}
									},
									{
										"name": "transaction_status",
										"string": {
											"computed_optional_required": "computed",
											"description": "The transaction status of the wallet transaction. Possible values are `purchased` (with pending or settled status), `granted` (without invoice_id), `voided` or `invoiced`."
										}
									},
									{
										"name": "transaction_type",
										"string": {
											"computed_optional_required": "computed",
											"description": "The type of transaction. Possible values are `inbound` (increasing the balance) or `outbound` (decreasing the balance)."
										}
									}
								]
							}
						}
					},
					{
						"name": "amount",
						"string": {
							"computed_optional_required": "computed",
							"description": "The amount of credits based on the rate and the currency."
						}
					},
					{
						"name": "created_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date of the wallet transaction creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
						}
					},
					{
						"name": "credit_amount",
						"string": {
							"computed_optional_required": "computed",
							"description": "The number of credits used in the wallet transaction."
						}
					},
					{
						"name": "invoice_requires_successful_payment",
						"bool": {
							"computed_optional_required": "computed",
							"description": "A boolean setting that, when set to true, delays issuing an invoice for a wallet top-up until a successful payment is made; if false, the invoice is issued immediately upon wallet top-up, regardless of the payment status. Default value of false."
						}
					},
					{
						"name": "lago_id",
						"string": {
							"computed_optional_required": "computed",
							"description": "Unique identifier assigned to the wallet transaction within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet transaction's record within the Lago system."
						}
					},
					{
						"name": "lago_wallet_id",
						"string": {
							"computed_optional_required": "computed",
							"description": "Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet's record within the Lago system."
						}
					},
					{
						"name": "metadata",
						"list_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "key",
										"string": {
											"computed_optional_required": "computed",
											"description": "The unique identifier for the attribute."
										}
									},
									{
										"name": "value",
										"string": {
											"computed_optional_required": "computed",
											"description": "The value associated with the key."
										}
									}
								]
							},
							"description": "This field allows you to store a list of key-value pairs that hold additional information or custom attributes related to the data."
						}
					},
					{
						"name": "settled_at",
						"string": {
							"computed_optional_required": "computed",
							"description": "The date when wallet transaction is settled, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
						}
					},
					{
						"name": "source",
						"string": {
							"computed_optional_required": "computed",
							"description": "The source field represents the origin or trigger of the wallet transaction. Possible values are `manual`, `interval`. `threshold`"
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed",
							"description": "The status of the wallet transaction. Possible values are `pending` or `settled`."
						}
					},
					{
						"name": "transaction_status",
						"string": {
							"computed_optional_required": "computed",
							"description": "The transaction status of the wallet transaction. Possible values are `purchased` (with pending or settled status), `granted` (without invoice_id), `voided` or `invoiced`."
						}
					},
					{
						"name": "transaction_type",
						"string": {
							"computed_optional_required": "computed",
							"description": "The type of transaction. Possible values are `inbound` (increasing the balance) or `outbound` (decreasing the balance)."
						}
					}
				]
			}
		},
		{
			"name": "wallets",
			"schema": {
				"attributes": [
					{
						"name": "wallet",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "currency",
									"string": {
										"computed_optional_required": "required",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"AED\",\n\"AFN\",\n\"ALL\",\n\"AMD\",\n\"ANG\",\n\"AOA\",\n\"ARS\",\n\"AUD\",\n\"AWG\",\n\"AZN\",\n\"BAM\",\n\"BBD\",\n\"BDT\",\n\"BGN\",\n\"BIF\",\n\"BMD\",\n\"BND\",\n\"BOB\",\n\"BRL\",\n\"BSD\",\n\"BWP\",\n\"BYN\",\n\"BZD\",\n\"CAD\",\n\"CDF\",\n\"CHF\",\n\"CLF\",\n\"CLP\",\n\"CNY\",\n\"COP\",\n\"CRC\",\n\"CVE\",\n\"CZK\",\n\"DJF\",\n\"DKK\",\n\"DOP\",\n\"DZD\",\n\"EGP\",\n\"ETB\",\n\"EUR\",\n\"FJD\",\n\"FKP\",\n\"GBP\",\n\"GEL\",\n\"GIP\",\n\"GMD\",\n\"GNF\",\n\"GTQ\",\n\"GYD\",\n\"HKD\",\n\"HNL\",\n\"HRK\",\n\"HTG\",\n\"HUF\",\n\"IDR\",\n\"ILS\",\n\"INR\",\n\"ISK\",\n\"JMD\",\n\"JPY\",\n\"KES\",\n\"KGS\",\n\"KHR\",\n\"KMF\",\n\"KRW\",\n\"KYD\",\n\"KZT\",\n\"LAK\",\n\"LBP\",\n\"LKR\",\n\"LRD\",\n\"LSL\",\n\"MAD\",\n\"MDL\",\n\"MGA\",\n\"MKD\",\n\"MMK\",\n\"MNT\",\n\"MOP\",\n\"MRO\",\n\"MUR\",\n\"MVR\",\n\"MWK\",\n\"MXN\",\n\"MYR\",\n\"MZN\",\n\"NAD\",\n\"NGN\",\n\"NIO\",\n\"NOK\",\n\"NPR\",\n\"NZD\",\n\"PAB\",\n\"PEN\",\n\"PGK\",\n\"PHP\",\n\"PKR\",\n\"PLN\",\n\"PYG\",\n\"QAR\",\n\"RON\",\n\"RSD\",\n\"RUB\",\n\"RWF\",\n\"SAR\",\n\"SBD\",\n\"SCR\",\n\"SEK\",\n\"SGD\",\n\"SHP\",\n\"SLL\",\n\"SOS\",\n\"SRD\",\n\"STD\",\n\"SZL\",\n\"THB\",\n\"TJS\",\n\"TOP\",\n\"TRY\",\n\"TTD\",\n\"TWD\",\n\"TZS\",\n\"UAH\",\n\"UGX\",\n\"USD\",\n\"UYU\",\n\"UZS\",\n\"VND\",\n\"VUV\",\n\"WST\",\n\"XAF\",\n\"XCD\",\n\"XOF\",\n\"XPF\",\n\"YER\",\n\"ZAR\",\n\"ZMW\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "expiration_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The date and time that determines when the wallet will expire. It follows the ISO 8601 datetime format and is expressed in Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "external_customer_id",
									"string": {
										"computed_optional_required": "required",
										"description": "The customer external unique identifier (provided by your own application)"
									}
								},
								{
									"name": "granted_credits",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The number of free granted credits. Required only if there is no paid credits.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "invoice_requires_successful_payment",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "A boolean setting that, when set to true, delays issuing an invoice for a wallet top-up until a successful payment is made; if false, the invoice is issued immediately upon wallet top-up, regardless of the payment status. Default value of false."
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The name of the wallet."
									}
								},
								{
									"name": "paid_credits",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The number of paid credits. Required only if there is no granted credits.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "rate_amount",
									"string": {
										"computed_optional_required": "required",
										"description": "The rate of conversion between credits and the amount in the specified currency. It indicates the ratio or factor used to convert credits into the corresponding monetary value in the currency of the transaction.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "regexp"
														},
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
												}
											}
										]
									}
								},
								{
									"name": "recurring_transaction_rules",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "granted_credits",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The number of free granted credits used for recurring top-up.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "regexp"
																		},
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																}
															}
														]
													}
												},
												{
													"name": "interval",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The interval used for recurring top-up. It represents the frequency at which automatic top-up occurs. The interval can be one of the following values: `weekly`, `monthly`, `quarterly` or `yearly`. Required only when trigger is `interval`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"weekly\",\n\"monthly\",\n\"quarterly\",\n\"yearly\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "invoice_requires_successful_payment",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "A boolean setting that, when set to true, delays issuing an invoice for a wallet top-up until a successful payment is made; if false, the invoice is issued immediately upon wallet top-up, regardless of the payment status. Default value of false."
													}
												},
												{
													"name": "method",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The method used for recurring top-up. Possible values are `fixed` or `target`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"fixed\",\n\"target\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "paid_credits",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The number of paid credits used for recurring top-up.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "regexp"
																		},
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																}
															}
														]
													}
												},
												{
													"name": "started_at",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The effective start date for recurring top-ups. This date should be provided in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
													}
												},
												{
													"name": "target_ongoing_balance",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The target ongoing balance is the value set for the ongoing balance to be reached by the automatic top-up. Required only when trigger is set to `target`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "regexp"
																		},
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																}
															}
														]
													}
												},
												{
													"name": "threshold_credits",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The threshold for recurring top-ups is the value at which an automatic top-up is triggered. For example, if this threshold is set at 10 credits, an automatic top-up will occur whenever the wallet balance falls to or below 10 credits. Required only when trigger is set to `threshold`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "regexp"
																		},
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.RegexMatches(regexp.MustCompile(\"^[0-9]+.?[0-9]*$\"), \"\")"
																}
															}
														]
													}
												},
												{
													"name": "transaction_metadata",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "key",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The unique identifier for the attribute."
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The value associated with the key."
																	}
																}
															]
														},
														"description": "This optional field allows you to store a list of key-value pairs containing additional information or custom attributes. These key-value pairs will populate the metadata of the wallet transactions triggered by this rule."
													}
												},
												{
													"name": "trigger",
													"string": {
														"computed_optional_required": "required",
														"description": "The trigger. Possible values are `interval` or `threshold`.",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"interval\",\n\"threshold\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "created_at",
													"string": {
														"computed_optional_required": "computed",
														"description": "The date of the metadata object creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC). The creation_date provides a standardized and internationally recognized timestamp for when the metadata object was created"
													}
												},
												{
													"name": "lago_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "A unique identifier for the recurring transaction rule in the Lago application. Can be used to update a recurring transaction rule."
													}
												}
											]
										},
										"description": "List of recurring transaction rules. Currently, we only allow one recurring rule per wallet."
									}
								},
								{
									"name": "transaction_metadata",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "key",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The unique identifier for the attribute."
													}
												},
												{
													"name": "value",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "The corresponding value for the key."
													}
												}
											]
										},
										"description": "This optional field allows you to store a list of key-value pairs that provide additional information or custom attributes. These key-value pairs will be included in the metadata of wallet transactions generated during the wallet creation process."
									}
								},
								{
									"name": "balance_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The current wallet balance expressed in cents. This reflects the available balance after all transactions are settled."
									}
								},
								{
									"name": "consumed_credits",
									"string": {
										"computed_optional_required": "computed",
										"description": "The number of consumed credits."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date of the wallet creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "credits_balance",
									"string": {
										"computed_optional_required": "computed",
										"description": "The current wallet balance expressed in credits. This reflects the available balance after all transactions are settled."
									}
								},
								{
									"name": "credits_ongoing_balance",
									"string": {
										"computed_optional_required": "computed",
										"description": "The ongoing wallet balance expressed in credits. This represents the `credits_balance` minus the `credits_ongoing_usage_balance`, showing the real time balance after accounting for current usage including taxes."
									}
								},
								{
									"name": "credits_ongoing_usage_balance",
									"string": {
										"computed_optional_required": "computed",
										"description": "The ongoing usage balance of the wallet, expressed in credits. This reflects all current usage and draft invoices including taxes."
									}
								},
								{
									"name": "lago_customer_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the customer within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the customer's record within the Lago system."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet's record within the Lago system."
									}
								},
								{
									"name": "last_balance_sync_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time of the last balance top-up. It follows the ISO 8601 datetime format and is expressed in Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "last_consumed_credit_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date and time of the last credits consumption. It follows the ISO 8601 datetime format and is expressed in Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "ongoing_balance_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The ongoing wallet balance expressed in cents. This represents the `balance_cents` minus the `ongoing_usage_balance_cents`, showing the real time balance after accounting for current usage including taxes."
									}
								},
								{
									"name": "ongoing_usage_balance_cents",
									"int64": {
										"computed_optional_required": "computed",
										"description": "The ongoing usage balance of the wallet, expressed in cents. This reflects all current usage and draft invoices including taxes."
									}
								},
								{
									"name": "status",
									"string": {
										"computed_optional_required": "computed",
										"description": "The status of the wallet. Possible values are `active` or `terminated`."
									}
								},
								{
									"name": "terminated_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date of terminaison of the wallet. It follows the ISO 8601 datetime format and is expressed in Coordinated Universal Time (UTC)."
									}
								}
							]
						}
					},
					{
						"name": "lago_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the wallet's record within the Lago system."
						}
					},
					{
						"name": "page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Page number."
						}
					},
					{
						"name": "per_page",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "Number of records per page."
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The status of the wallet transaction. Possible values are `pending` or `settled`."
						}
					},
					{
						"name": "transaction_status",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The transaction status of the wallet transaction. Possible values are `purchased` (with pending or settled status), `granted` (without invoice_id), `voided` or `invoiced`."
						}
					},
					{
						"name": "transaction_type",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "The transaction type of the wallet transaction. Possible values are `inbound` (increasing the wallet balance) or `outbound` (decreasing the wallet balance)."
						}
					}
				]
			}
		},
		{
			"name": "webhook_endpoints",
			"schema": {
				"attributes": [
					{
						"name": "webhook_endpoint",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "signature_algo",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "The signature used for the webhook. If no value is passed,",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"jwt\",\n\"hmac\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "webhook_url",
									"string": {
										"computed_optional_required": "required",
										"description": "The URL of the webhook endpoint."
									}
								},
								{
									"name": "created_at",
									"string": {
										"computed_optional_required": "computed",
										"description": "The date of the webhook endpoint creation, represented in ISO 8601 datetime format and expressed in Coordinated Universal Time (UTC)."
									}
								},
								{
									"name": "lago_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the wallet within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the webhook endpoint's record within the Lago system."
									}
								},
								{
									"name": "lago_organization_id",
									"string": {
										"computed_optional_required": "computed",
										"description": "Unique identifier assigned to the organization attached to the webhook endpoint within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the organization's record within the Lago system."
									}
								}
							]
						}
					},
					{
						"name": "lago_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique identifier assigned to the webhook endpoint within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the webhook endpoint's record within the Lago system."
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}